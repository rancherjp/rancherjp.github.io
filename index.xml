<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rancher JP</title>
    <link>http://www.rancher.jp/index.xml</link>
    <description>Recent content on Rancher JP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>© 2016 Rancher JP</copyright>
    <lastBuildDate>Tue, 24 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.rancher.jp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>リリース v1.3.3</title>
      <link>http://www.rancher.jp/releasenote/v.1.3.3/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.3.3/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-3-3&#34;&gt;リリース v1.3.3&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.3.3&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.3&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;このリリースから Rancher で高可用性のために&lt;a href=&#34;http://docs.rancher.com/rancher/v1.3/en/installing-rancher/installing-server/#elb&#34;&gt;ELB を再び利用する&lt;/a&gt;ことができるようになりました。&lt;/li&gt;
&lt;li&gt;リリース v 1.2.x より前からアップグレードする場合、まずインフラストラクチャのスタックをチェックして、サービスが最新であることを確認してください。 [アップグレード可能]ボタンが表示されている場合は、最新のサービスに更新してください。&lt;strong&gt;ひとつひとつのインフラストラクチャースタックが完全にアップグレードされてから次のスタックに移動してください&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rancherのリリースごとに、ロードバランサーサービスのための特定のロードバランサイメージ（つまり &lt;code&gt;rancher/lb-service-haproxy&lt;/code&gt;）にタグを付けました。以前のバージョンのRancherからアップグレードして、新しいロードバランサイメージがリリースされている場合は、ロードバランサ名の横にシンボルが表示され、そのRancherバージョンで新しいイメージが使用可能であることを示します。ロードバランサの最新のイメージにアップグレードすることをお勧めします。&lt;/li&gt;
&lt;li&gt;1.1.xからアップグレードする場合は、アップグレードに関する重要な注意点に関する&lt;a href=&#34;https://github.com/rancher/rancher/releases/tag/v1.2.0&#34;&gt;v1.2.0&lt;/a&gt;のリリースノートをお読みください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-サーバータグ&#34;&gt;Rancher サーバータグ&lt;/h2&gt;

&lt;p&gt;Rancher サーバーに2種類のタグを付けています。メジャーリリース毎に特定のバージョンののドキュメントを提供しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rancher/server:latest&lt;/code&gt; タグは、最新の開発ビルドです。これらのビルドは、CI自動化フレームワークを通じて検証されています。これらのリリースは本番環境での展開用ではありません。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rancher/server:stable&lt;/code&gt; タグは、最新の安定版リリースです。このタグは、本番環境に推奨するバージョンです。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;末尾が&lt;code&gt;rc{n}&lt;/code&gt;のリリースはどれも利用しないでください。&lt;code&gt;rc&lt;/code&gt; ビルドは、Rancherチームのテスト用です。&lt;/p&gt;

&lt;p&gt;v1.3.3 は、&lt;code&gt;rancher/server:latest&lt;/code&gt; タグが付いています。&lt;/p&gt;

&lt;h2 id=&#34;インフラストラクチャーサービスの注意点&#34;&gt;インフラストラクチャーサービスの注意点&lt;/h2&gt;

&lt;p&gt;このバージョン1.3.1では、新しい &lt;code&gt;scheduler&lt;/code&gt;エントリを追加しました。このエントリは、&lt;code&gt;network-services&lt;/code&gt; より前にアップグレードする必要があります。ネットワークサービスをアップグレードするときのバグが修正されます。&lt;/p&gt;

&lt;h2 id=&#34;主要な既知の問題&#34;&gt;主要な既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI（aka docker-machine）を使用してv1.1.4から作成されたAWSのホストは、UIから削除されたときに正しくクリーンアップされません[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;#6750&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己署名証明書では、リモート kubectl クライアントを使用すると自動的には動作しません。回避策があります[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7235&#34;&gt;#7235&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己証明書とKubernetesを使っているときに、Helm オペレーションが固まる[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7234&#34;&gt;#7234&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;コンテナを再起動後に、コンテナが利用可能になるまでDNSの解決が遅延します[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7402&#34;&gt;#74021&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-3-2からの主なバグ修正&#34;&gt;v1.3.2からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ELB を利用する設定を有効にしていると、&lt;code&gt;kubectl exec&lt;/code&gt; がALB 配下で動作しないという問題を修正しました。&lt;a href=&#34;http://docs.rancher.com/rancher/v1.3/en/installing-rancher/installing-server/#elb&#34;&gt;ELB を設定する追加操作&lt;/a&gt;と&lt;a href=&#34;http://docs.rancher.com/rancher/v1.3/en/installing-rancher/installing-server/basic-ssl-config/#elb&#34;&gt;SSL を有効にする追加操作&lt;/a&gt; [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7464&#34;&gt;#7464&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-compose-downloads&#34;&gt;Rancher-Compose Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-cli-downloads&#34;&gt;Rancher CLI Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;https://github.com/rancher/cli/releases/tag/v0.4.1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.3.1</title>
      <link>http://www.rancher.jp/releasenote/v.1.3.1/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.3.1/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-3-1&#34;&gt;リリース v1.3.1&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.3.1&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.3&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;バージョン 1.2.0 から Rancher は AWS ELB をサポートしなくなり、AWS ALB (アプリケーションロードバランサー)のみをサポートします。高可用性設定は、ALB を利用してください。&lt;/li&gt;
&lt;li&gt;リリース v 1.2.x より前からアップグレードする場合、まずインフラストラクチャのスタックをチェックして、サービスが最新であることを確認してください。 [アップグレード可能]ボタンが表示されている場合は、最新のサービスに更新してください。&lt;strong&gt;ひとつひとつのインフラストラクチャースタックが完全にアップグレードされてから次のスタックに移動してください&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rancherのリリースごとに、ロードバランサーサービスのための特定のロードバランサイメージ（つまり &lt;code&gt;rancher/lb-service-haproxy&lt;/code&gt;）にタグを付けました。以前のバージョンのRancherからアップグレードして、新しいロードバランサイメージがリリースされている場合は、ロードバランサ名の横にシンボルが表示され、そのRancherバージョンで新しいイメージが使用可能であることを示します。ロードバランサの最新のイメージにアップグレードすることをお勧めします。&lt;/li&gt;
&lt;li&gt;1.1.xからv1.2.2にアップグレードする場合は、アップグレードに関する重要な注意点に関する&lt;a href=&#34;https://github.com/rancher/rancher/releases/tag/v1.2.0&#34;&gt;v1.2.0&lt;/a&gt;のリリースノートをお読みください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-サーバータグ&#34;&gt;Rancher サーバータグ&lt;/h2&gt;

&lt;p&gt;Rancher サーバーに2種類のタグを付けています。メジャーリリース毎に特定のバージョンののドキュメントを提供しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rancher/server:latest&lt;/code&gt; タグは、最新の開発ビルドです。これらのビルドは、CI自動化フレームワークを通じて検証されています。これらのリリースは本番環境での展開用ではありません。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rancher/server:stable&lt;/code&gt; タグは、最新の安定版リリースです。このタグは、本番環境に推奨するバージョンです。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;末尾が&lt;code&gt;rc{n}&lt;/code&gt;のリリースはどれも利用しないでください。&lt;code&gt;rc&lt;/code&gt; ビルドは、Rancherチームのテスト用です。&lt;/p&gt;

&lt;p&gt;v1.3.1 は、&lt;code&gt;rancher/server:latest&lt;/code&gt; タグが付いています。&lt;/p&gt;

&lt;h2 id=&#34;インフラストラクチャーサービスの注意点&#34;&gt;インフラストラクチャーサービスの注意点&lt;/h2&gt;

&lt;p&gt;このバージョンでは、新しい &lt;code&gt;scheduler&lt;/code&gt;エントリを追加しました。このエントリは、&lt;code&gt;network-services&lt;/code&gt; より前にアップグレードする必要があります。ネットワークサービスをアップグレードするときのバグが修正されます。&lt;/p&gt;

&lt;h2 id=&#34;主要な既知の問題&#34;&gt;主要な既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI（aka docker-machine）を使用してv1.1.4から作成されたAWSのホストは、UIから削除されたときに正しくクリーンアップされません[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;#6750&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己署名証明書では、リモート kubectl クライアントを使用すると自動的には動作しません。回避策があります[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7235&#34;&gt;#7235&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己証明書とKubernetesを使っているときに、Helm オペレーションが固まる[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7234&#34;&gt;#7234&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-3-0からの主なバグ修正&#34;&gt;v1.3.0からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;composeとCLIのダウンロードリンクが古いバージョンであるのを修正しました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7361&#34;&gt;#7361&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Kubernetes Dashboardが時折読み込まれない問題を修正しました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7320&#34;&gt;#7320&lt;/a&gt;] &lt;strong&gt;注意:&lt;/strong&gt; ダッシュボードがv1.3.0で動作していない場合は、アップグレード後に &lt;code&gt;kubernetes-dashboard-xxx&lt;/code&gt;ポッドを削除する必要があります。 &lt;strong&gt;Kubernetes&lt;/strong&gt;  -&amp;gt; &lt;strong&gt;Pods&lt;/strong&gt; の下の &lt;strong&gt;kube-system&lt;/strong&gt; 名前空間でポッドが見つかります。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-compose-downloads&#34;&gt;Rancher-Compose Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-cli-downloads&#34;&gt;Rancher CLI Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;https://github.com/rancher/cli/releases/tag/v0.4.1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.3.2</title>
      <link>http://www.rancher.jp/releasenote/v.1.3.2/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.3.2/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-3-2&#34;&gt;リリース v1.3.2&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.3.2&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.3&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;バージョン 1.2.0 から Rancher は AWS ELB をサポートしなくなり、AWS ALB (アプリケーションロードバランサー)のみをサポートします。高可用性設定は、ALB を利用してください。&lt;/li&gt;
&lt;li&gt;リリース v 1.2.x より前からアップグレードする場合、まずインフラストラクチャのスタックをチェックして、サービスが最新であることを確認してください。 [アップグレード可能]ボタンが表示されている場合は、最新のサービスに更新してください。&lt;strong&gt;ひとつひとつのインフラストラクチャースタックが完全にアップグレードされてから次のスタックに移動してください&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rancherのリリースごとに、ロードバランサーサービスのための特定のロードバランサイメージ（つまり &lt;code&gt;rancher/lb-service-haproxy&lt;/code&gt;）にタグを付けました。以前のバージョンのRancherからアップグレードして、新しいロードバランサイメージがリリースされている場合は、ロードバランサ名の横にシンボルが表示され、そのRancherバージョンで新しいイメージが使用可能であることを示します。ロードバランサの最新のイメージにアップグレードすることをお勧めします。&lt;/li&gt;
&lt;li&gt;1.1.xからアップグレードする場合は、アップグレードに関する重要な注意点に関する&lt;a href=&#34;https://github.com/rancher/rancher/releases/tag/v1.2.0&#34;&gt;v1.2.0&lt;/a&gt;のリリースノートをお読みください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-サーバータグ&#34;&gt;Rancher サーバータグ&lt;/h2&gt;

&lt;p&gt;Rancher サーバーに2種類のタグを付けています。メジャーリリース毎に特定のバージョンののドキュメントを提供しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rancher/server:latest&lt;/code&gt; タグは、最新の開発ビルドです。これらのビルドは、CI自動化フレームワークを通じて検証されています。これらのリリースは本番環境での展開用ではありません。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rancher/server:stable&lt;/code&gt; タグは、最新の安定版リリースです。このタグは、本番環境に推奨するバージョンです。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;末尾が&lt;code&gt;rc{n}&lt;/code&gt;のリリースはどれも利用しないでください。&lt;code&gt;rc&lt;/code&gt; ビルドは、Rancherチームのテスト用です。&lt;/p&gt;

&lt;p&gt;v1.3.2 は、&lt;code&gt;rancher/server:latest&lt;/code&gt; タグが付いています。&lt;/p&gt;

&lt;h2 id=&#34;インフラストラクチャーサービスの注意点&#34;&gt;インフラストラクチャーサービスの注意点&lt;/h2&gt;

&lt;p&gt;バージョン1.3.1では、新しい &lt;code&gt;scheduler&lt;/code&gt;エントリを追加しました。このエントリは、&lt;code&gt;network-services&lt;/code&gt; より前にアップグレードする必要があります。ネットワークサービスをアップグレードするときのバグが修正されます。&lt;/p&gt;

&lt;h2 id=&#34;主要な既知の問題&#34;&gt;主要な既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI（aka docker-machine）を使用してv1.1.4から作成されたAWSのホストは、UIから削除されたときに正しくクリーンアップされません[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;#6750&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己署名証明書では、リモート kubectl クライアントを使用すると自動的には動作しません。回避策があります[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7235&#34;&gt;#7235&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己証明書とKubernetesを使っているときに、Helm オペレーションが固まる[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7234&#34;&gt;#7234&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;コンテナを再起動後に、コンテナが利用可能になるまでDNSの解決が遅延します[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7402&#34;&gt;#74021&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-3-1からの主なバグ修正&#34;&gt;v1.3.1からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;コンテナーで出力されていたログを表示した後にブラウザーを閉じると、フロントエンドチャンネルが見つからないためにログがスパムのようになっていたのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7327&#34;&gt;#7327&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;ボリュームが削除できないときに volumestoragepoolmap.remove プロセスが肥大し続けていたのを修正[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7464&#34;&gt;#7464&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-compose-downloads&#34;&gt;Rancher-Compose Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-cli-downloads&#34;&gt;Rancher CLI Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;https://github.com/rancher/cli/releases/tag/v0.4.1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rancher Meetup Tokyo #3</title>
      <link>http://www.rancher.jp/content/2017/01/11/rancher-meetup-03/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/content/2017/01/11/rancher-meetup-03/</guid>
      <description>

&lt;h1 id=&#34;第3回-コンテナ管理ツール-rancher勉強会&#34;&gt;【第3回】コンテナ管理ツール Rancher勉強会&lt;/h1&gt;

&lt;h2 id=&#34;rancherとは&#34;&gt;Rancherとは？&lt;/h2&gt;

&lt;p&gt;RancherはOSSと商用版で提供されるコンテナ環境構築・運用プラットフォームです。 Rancherの特徴は、Kubernetes, Mesos, Swarmなどのコンテナオーケストレータ自体もデプロイし、その機能を利用した効率的なコンテナインフラの構築・管理運用が可能なことです。 また、Active Directory連携や監査ログな機能などにより本格的なエンタープライズ向けプラットフォームとして世界で導入実績を重ねています。&lt;/p&gt;

&lt;p&gt;是非この機会にRancherについて学んで頂ければ幸いです。 皆様のご参加お待ちしております！&lt;/p&gt;

&lt;p&gt;OSS版：
&lt;a href=&#34;https://github.com/rancherlabs/&#34;&gt;https://github.com/rancherlabs/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;商用版：
&lt;a href=&#34;http://rancher.com/&#34;&gt;http://rancher.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;イベント開催概要&#34;&gt;イベント開催概要&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;日時      1月11日(水) 19:00-21:00 (開場:18:30)&lt;/li&gt;
&lt;li&gt;会場      TKPガーデンシティ渋谷 ホール「B」&lt;br /&gt;
        東京都渋谷区渋谷2-22-3 渋谷東口ビル1F&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;渋谷駅 東口 徒歩3分&lt;/p&gt;

&lt;p&gt;&lt;em&gt;※ご注意※&lt;/em&gt;
&lt;em&gt;【会場変更】当初、TIS様「西新宿三井ビルディング23階」での開催を予定しておりましたが、会場拡大のため渋谷TKPホールに変更になりました。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;地図：
&lt;a href=&#34;http://www.kashikaigishitsu.net/facilitys/gc-shibuya/access/&#34;&gt;http://www.kashikaigishitsu.net/facilitys/gc-shibuya/access/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;■ 主催&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://rancherjp.connpass.com/&#34;&gt;Rancher JP&lt;/a&gt;&lt;br /&gt;
Compassページ: &lt;a href=&#34;https://rancherjp.connpass.com/event/45768/&#34;&gt;【会場変更 →渋谷】Rancher Meetup Tokyo #3 - connpass&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;プログラム&#34;&gt;プログラム&lt;/h2&gt;

&lt;h3 id=&#34;19-00-19-20-rancher-海外最新事例紹介&#34;&gt;19:00-19:20 「Rancher 海外最新事例紹介」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表：Shannon Williams (VP of Sales, Rancher Labs)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;19-20-19-40-rancher-のストレージ&#34;&gt;19:20-19:40 「Rancher のストレージ」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表: 矢野 哲朗 (スタイルズ)&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/5qT0HYYuSG7YQl&#34;
    width=&#34;766&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;
    style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt;
    &lt;strong&gt;
        &lt;a href=&#34;//www.slideshare.net/ttyno/rancher-meetup-tokyo3-storage&#34;
            title=&#34;Rancher Meetup Tokyo#3 Storageについて&#34;
            target=&#34;_blank&#34;&gt;Rancher Meetup Tokyo#3 Storageについて
        &lt;/a&gt;
    &lt;/strong&gt; from 
    &lt;strong&gt;
        &lt;a target=&#34;_blank&#34; href=&#34;//www.slideshare.net/ttyno/rancher-meetup-tokyo3-storage&#34;&gt;Tetsuro YANO&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;

&lt;h3 id=&#34;19-40-20-00-rancherを用いた-docker-private-cloud&#34;&gt;19:40-20:00 「Rancherを用いた Docker Private Cloud」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表: 野原 峰彦 (マクニカネットワークス)&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/sVOJUVNscOzEIm&#34;
    width=&#34;766&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;
    style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt;
    &lt;strong&gt;
        &lt;a href=&#34;//www.slideshare.net/minehikonohara/20170111-macnica-networksnohararancherusecase&#34;
            title=&#34;20170111 macnica networks-nohara_rancher_usecase&#34;
            target=&#34;_blank&#34;&gt;20170111 macnica networks-nohara_rancher_usecase
        &lt;/a&gt;
    &lt;/strong&gt; from 
    &lt;strong&gt;
        &lt;a target=&#34;_blank&#34; href=&#34;//www.slideshare.net/minehikonohara/20170111-macnica-networksnohararancherusecase&#34;&gt;Minehiko Nohara&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;

&lt;h3 id=&#34;20-00-20-20-休憩&#34;&gt;20:00-20:20 「休憩」&lt;/h3&gt;

&lt;h3 id=&#34;20-20-20-30-rancherでサービスの開発と運用&#34;&gt;20:20-20:30 「Rancherでサービスの開発と運用」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表: @okamu (カヤック)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;20-30-20-40-コンテナ管理ツール比較&#34;&gt;20:30-20:40 「コンテナ管理ツール比較」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表：@cyberblack28&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/mcr8ufPmAzX40q&#34;
    width=&#34;766&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;
    style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&#34;margin-bottom:5px&#34;&gt;
    &lt;strong&gt;
        &lt;a href=&#34;//www.slideshare.net/cyberblackvoom/04-publicr001&#34;
            title=&#34;04 コンテナ管理ツール比較&#34;
            target=&#34;_blank&#34;&gt;04 コンテナ管理ツール比較
        &lt;/a&gt;
    &lt;/strong&gt; from 
    &lt;strong&gt;
        &lt;a target=&#34;_blank&#34; href=&#34;//www.slideshare.net/cyberblackvoom/04-publicr001&#34;&gt;Linux Action&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;

&lt;h3 id=&#34;20-40-20-50-rancher-on-azure-はじめの一歩&#34;&gt;20:40-20:50 「Rancher on Azure ～ はじめの一歩」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表：@dz_&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;width: 752px; max-width: 100%; margin-bottom:5px;&#34;&gt;
    &lt;a href=&#34;https://docs.com/https://docs.com/oohira-kadumi/4253/rancher-on-azure&#34; title=&#34;Rancher on Azure ～ はじめの一歩！&#34; target=&#34;_blank&#34;
       style=&#34;font-family: &#39;Segoe UI&#39;; font-size: 13px; text-decoration: none; margin-left:18px &#34;&gt;Rancher on Azure ～ はじめの一歩！&lt;/a&gt;
    &lt;span style=&#34;font-family: &#39;Segoe UI&#39;; font-size: 13px &#34;&gt;—&lt;/span&gt;
    &lt;a href=&#34;https://docs.com/oohira-kadumi&#34; target=&#34;_blank&#34;
       style=&#34;font-family: &#39;Segoe UI&#39;; font-size: 13px; text-decoration: none &#34;&gt;Oohira Kadumi&lt;/a&gt;
&lt;/div&gt;
&lt;iframe src=&#34;https://docs.com/d/embed/D25191819-3403-0323-7700-001637397483%7eM1af8d7a5-b506-361b-290d-65d4bfcf2516&#34; frameborder=&#34;0&#34;
        scrolling=&#34;no&#34; width=&#34;752px&#34; height=&#34;459px&#34; style=&#34;max-width:100%&#34; allowfullscreen=&#34;True&#34;&gt;
&lt;/iframe&gt;

&lt;h3 id=&#34;20-50-21-00-rancher-jp-活動紹介-クロージング&#34;&gt;20:50-21:00 「Rancher JP 活動紹介 &amp;amp; クロージング」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;発表：@go_chiba&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.3.0</title>
      <link>http://www.rancher.jp/releasenote/v.1.3.0/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.3.0/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-3-0&#34;&gt;リリース v1.3.0&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.3.0&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.3&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rancher は今後 AWS ELB をサポートせず、AWS ALB (Application Load Balancers) のみのサポートとなります。そのため、今後は ALB を利用するよう設定をアップデートしてください。&lt;/li&gt;
&lt;li&gt;バージョン 1.2.0 から Rancher は AWS ELB をサポートしなくなり、AWS ALB (アプリケーションロードバランサー)のみをサポートします。高可用性設定は、ALB を利用してください。&lt;/li&gt;
&lt;li&gt;リリース v 1.2.x より前からアップグレードする場合、まずインフラストラクチャのスタックをチェックして、サービスが最新であることを確認してください。 [アップグレード可能]ボタンが表示されている場合は、最新のサービスに更新してください。&lt;strong&gt;ひとつひとつのインフラストラクチャースタックが完全にアップグレードされてから次のスタックに移動してください&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rancherのリリースごとに、ロードバランサーサービスのための特定のロードバランサイメージ（つまり &lt;code&gt;rancher/lb-service-haproxy&lt;/code&gt;）にタグを付けました。以前のバージョンのRancherからアップグレードして、新しいロードバランサイメージがリリースされている場合は、ロードバランサ名の横にシンボルが表示され、そのRancherバージョンで新しいイメージが使用可能であることを示します。ロードバランサの最新のイメージにアップグレードすることをお勧めします。&lt;/li&gt;
&lt;li&gt;1.1.xからv1.2.2にアップグレードする場合は、アップグレードに関する重要な注意点に関する&lt;a href=&#34;https://github.com/rancher/rancher/releases/tag/v1.2.0&#34;&gt;v1.2.0&lt;/a&gt;のリリースノートをお読みください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-サーバータグ&#34;&gt;Rancher サーバータグ&lt;/h2&gt;

&lt;p&gt;Rancher サーバーに2種類のタグを付けています。メジャーリリース毎に特定のバージョンののドキュメントを提供しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rancher/server:latest&lt;/code&gt; タグは、最新の開発ビルドです。これらのビルドは、CI自動化フレームワークを通じて検証されています。これらのリリースは本番環境での展開用ではありません。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rancher/server:stable&lt;/code&gt; タグは、最新の安定版リリースです。このタグは、本番環境に推奨するバージョンです。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;末尾が&lt;code&gt;rc{n}&lt;/code&gt;のリリースはどれも利用しないでください。&lt;code&gt;rc&lt;/code&gt; ビルドは、Rancherチームのテスト用です。&lt;/p&gt;

&lt;p&gt;v1.3.0 は、&lt;code&gt;rancher/server:latest&lt;/code&gt; タグが付いています。&lt;/p&gt;

&lt;h2 id=&#34;特徴&#34;&gt;特徴&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows Server 2016 サポート - 実験的 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/4576&#34;&gt;#4576&lt;/a&gt;]&lt;/strong&gt; - 実験的なプレビューで&lt;a href=&#34;http://docs.rancher.com/rancher/v1.3/en/windows/&#34;&gt;Windowsコンテナーをサポート&lt;/a&gt;。 Windowsコンテナに対するDockerのサポートの詳細については、&lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/quick-start-windows-server&#34;&gt;Dockerのウィンドウのサポート&lt;/a&gt;を参照してください。今回の実験的リリースでは、次の機能に制限しています:

&lt;ul&gt;
&lt;li&gt;RancherエージェントサービスとしてのWindows 2016サーバーホストの追加。&lt;/li&gt;
&lt;li&gt;スタック、サービス、およびコンテナの追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.rancher.com/rancher/v1.3/en/windows/#networking-in-windows&#34;&gt;サポートされているネットワークモード&lt;/a&gt;は、「NAT」と「透過」のみです。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;注意: 上記以外にも、LBサービス、DNS、メタデータなどの既存のRancherの機能は、まだWindowsコンテナで動作するように移植されていないため、現在は機能していません。今後にご期待下さい！&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes のさらなる改善&lt;/strong&gt; - 次のサポートが追加されました:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes 1.5.1&lt;/strong&gt; - k8s 1.5.1 をサポートしました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SkyDNS サポート [&lt;a href=&#34;https://github.com/rancher/rancher/issues/5948&#34;&gt;#5948&lt;/a&gt;]&lt;/strong&gt; - Rancher 1.3 + k8s 1.5.1からは、SkyDNSのみがデフォルトのDNSエンジンになりました。すべての Rancher DNSエントリは SkyDNS を使用するように自動的に移行され、RancherDNS は k8s では廃止されます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Helm と Dashboard UI [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7003&#34;&gt;#7003&lt;/a&gt;]&lt;/strong&gt; - Rancher 1.3から、デフォルトで k8s ダッシュボードUIとHelmサポートが自動的に起動し、Rancherから管理されます。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UIの強化&lt;/strong&gt; - その他のUI機能:

&lt;ul&gt;
&lt;li&gt;コンテナページに一括操作と検索を追加しました [&lt;a href=&#34;https://github.com/rancher/rancher/issues/342&#34;&gt;#342&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/1533&#34;&gt;#1533&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;ホストビューでスタック名をクリックする機能 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/2557&#34;&gt;#2557&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;主要な既知の問題&#34;&gt;主要な既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI（aka docker-machine）を使用してv1.1.4から作成されたAWSのホストは、UIから削除されたときに正しくクリーンアップされません[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;#6750&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己署名証明書では、リモート kubectl クライアントを使用すると自動的には動作しません。回避策があります[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7235&#34;&gt;#7235&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;自己証明書とKubernetesを使っているときに、Helm オペレーションが固まる[&lt;a href=&#34;https://github.com/rancher/rancher/issues/7234&#34;&gt;#7234&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-2-2からの主なバグ修正&#34;&gt;v1.2.2からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rancherサーバーで自己署名証明書が動作しない問題を修正しました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6122&#34;&gt;#6122&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;個々のコンテナリンクを解決できない問題を修正しました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6584&#34;&gt;#6584&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Google Container Registryが機能しない問題を修正しました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6956&#34;&gt;#6956&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancher-compose-downloads&#34;&gt;Rancher-Compose Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-cli-downloads&#34;&gt;Rancher CLI Downloads&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;https://github.com/rancher/cli/releases/tag/v0.4.1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.2.2</title>
      <link>http://www.rancher.jp/releasenote/v.1.2.2/</link>
      <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.2.2/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-2-2&#34;&gt;リリース v1.2.2&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.2.2&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.2&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rancher は今後 AWS ELB をサポートせず、AWS ALB (Application Load Balancers) のみのサポートとなります。そのため、今後は ALB を利用するよう設定をアップデートしてください。&lt;/li&gt;
&lt;li&gt;リリース v 1.2.x より前からアップグレードする場合、まずインフラストラクチャのスタックをチェックして、サービスが最新であることを確認してください。 [アップグレード可能]ボタンが表示されている場合は、最新のサービスに更新してください。&lt;/li&gt;
&lt;li&gt;1.1.xからv1.2.2にアップグレードする場合は、アップグレードに関する重要な注意点に関する&lt;a href=&#34;https://github.com/rancher/rancher/releases/tag/v1.2.0&#34;&gt;v1.2.0&lt;/a&gt;のリリースノートをお読みください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;既知の問題&#34;&gt;既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;個々のコンテナ間リンクが正常に動作しない。この問題はコンテナのリンクのみが対象であり、サービスのリンクは正常に動作します。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/6584&#34;&gt;#6584&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Rancher サーバーにおいて自己証明書が正常に動作しない [&lt;a href=&#34;https://github.com/rancher/rancher/issues/6122&#34;&gt;#6122&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;先のリリースで UI から(docker-machine から)作成された AWS ホストが UI から削除した際に正常にクリーンアップされない [&lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;#6750&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-2-1からの主なバグ修正&#34;&gt;v1.2.1からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Dockerコンテナを削除しようとしたときに不正な状態になるという問題を修正しました。 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7013&#34;&gt;#7013&lt;/a&gt;、&lt;a href=&#34;https://github.com/rancher/rancher/issues/7016&#34;&gt;#70161&lt;/a&gt;、&lt;a href=&#34;https://github.com/rancher/rancher/issues/7152&#34;&gt;#7152&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;v1.2.1 でホスト削除時に&lt;code&gt;removing&lt;/code&gt;のままになってしまうのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7122&#34;&gt;#7122&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;コンテナ内から外部公開用ポートに対してpingが反応しないのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7128&#34;&gt;#7128&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;k8s でポットがフラッピング中にRancherのイベントが溢れるのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7149&#34;&gt;#7149&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;k8s サービスがスピニング中にプロセスが&lt;code&gt;create stack on label provider&lt;/code&gt; で溢れるのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7158&#34;&gt;#7158&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;swarm 環境が初期化時にスタックすることがあるのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/7178&#34;&gt;#7178&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>[翻訳]見逃されているかもしれないコンテナのレジストリ</title>
      <link>http://www.rancher.jp/traslated/container-registries-might-missed-ja/</link>
      <pubDate>Thu, 22 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/traslated/container-registries-might-missed-ja/</guid>
      <description>

&lt;p&gt;以下は、
Rancher Labs | Container registries you may have missed | Rancher Labs&lt;br /&gt;
&lt;a href=&#34;http://rancher.com/container-registries-might-missed/&#34;&gt;http://rancher.com/container-registries-might-missed/&lt;/a&gt;
からの翻訳です。&lt;/p&gt;

&lt;p&gt;Container Registries You Might Have Missed
見逃されているかもしれないコンテナのレジストリ&lt;/p&gt;

&lt;p&gt;2016年11月10日 &lt;a href=&#34;http://rancher.com/author/vince-power/&#34;&gt;Vince Power&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;レジストリは、コンテナを扱う上で重要なコンポーネントの一つで、特にDockerでは多くの人から注目を浴びています。レジストリは、コンテナエンジンホストにダウンロード実行されるイメージを保管します。コンテナはその特定のイメージの単なるインスタンスです。イメージは、Microsoft WindowsのMSIやRed Hat Enterprise LinuxのRPMなど、すぐに使えるパッケージのようなものと考えることができます。レジストリは、どういう風に動作するか詳細には述べませんが、詳細を知りたい場合はこの記事&lt;a href=&#34;http://rancher.com/comparing-four-hosted-docker-registries/&#34;&gt;素晴らしい記事&lt;/a&gt;を読むと良いでしょう。&lt;/p&gt;

&lt;p&gt;この記事で説明したいことは私の注目しているレジストリのいくつかを取り上げてみたいと思います。Dockerを使う人にとっては有名なレジストリは既に知られていると思いますが、どこにイメージを置くかを決めるのに考慮する価値のある小規模なレジストリもあります。&lt;/p&gt;

&lt;p&gt;あまり知られていないこれらのコンテナレジストリについても検討してみましょう。&lt;/p&gt;

&lt;h1 id=&#34;よく知られているレジストリ&#34;&gt;よく知られているレジストリ&lt;/h1&gt;

&lt;p&gt;まず、大手に属するレジストリをリストアップします。その上で注目しているレジストリと比較しましょう。&lt;/p&gt;

&lt;p&gt;現在、全てのDockerユーザーから最も人気のあるレジストリは&lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;です。Docker Hubはレジストリ界の中心です。全てのDockerがデフォルトでレジストリのホスト先として登録されています。&lt;/p&gt;

&lt;p&gt;その他の世に広く知られているレジストリ:
* &lt;a href=&#34;https://docs.docker.com/docker-trusted-registry/&#34;&gt;Docker Trusted Registries&lt;/a&gt; (Dockerが配布しているオープンソース)
* &lt;a href=&#34;https://quay.io/&#34;&gt;Quay.io&lt;/a&gt; (CoreOSが提供しているレジストリ)
* &lt;a href=&#34;https://tectonic.com/quay-enterprise/&#34;&gt;Enterprise Registry&lt;/a&gt; (Quayのオンプレミス版)
* &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;Google Container Registry&lt;/a&gt; (GoogleCloudプラットフォームが提供しているレジストリ)
* &lt;a href=&#34;https://www.jfrog.com/artifactory/&#34;&gt;Artifactory&lt;/a&gt; (JFrogが提供している。サービス型や、オンプレミスにできるレジストリ)&lt;/p&gt;

&lt;h1 id=&#34;あまり知られていないコンテナレジストリ&#34;&gt;あまり知られていないコンテナレジストリ&lt;/h1&gt;

&lt;p&gt;さて、注目のパートです。ここからはあまり知られていないレジストリを概説します。&lt;/p&gt;

&lt;h2 id=&#34;amazon-ec2-コンテナレジストリ-ecr&#34;&gt;Amazon EC2 コンテナレジストリ (ECR)&lt;/h2&gt;

&lt;p&gt;Amazonが&lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;Amazon EC2コンテナーサービス(ECS)&lt;/a&gt;と呼ばれるコンテナサービスを提供していることはすでにご存じかと思います。しかし、ECSの環境を完全に整えるレジストリについてはあまり知られていません。&lt;/p&gt;

&lt;p&gt;Amazon EC2 コンテナレジストリ(ECR)と呼ばれるこのレジストリは、Dockerのコンテナレジストリとして提供されています。ECSと統合されています。2015年12月に導入されたそれは、その他のよく知られているレジストリに比べてあまりしられていませんが、その理由を説明しましょう。&lt;/p&gt;

&lt;p&gt;ECSは、ECRとのみ互換性があるコンテナレジストリではありません。ECSは外部のレジストリとしても使うことができます。しかし、ECRの重要な点は完全にサービスとして管理されたレジストリで、展開と管理をシンプルにしています。ECRは、ECSのインフラと同じように拡張性があり、スケーラブルであるということです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; AWSのヘビーユーザーでプライベートなイメージを保管する場所を検討しているのならば、ECRを使うのは非常に合理的です。大規模にレジストリを展開する場合や、将来的にレジストリが拡大することが想定される場合にも適しています。これらの場合、ECRの事実上無制限の拡張性のメリットを享受できるでしょう。&lt;/p&gt;

&lt;h2 id=&#34;flawcheck-プライベートレジストリ&#34;&gt;FlawCheck プライベートレジストリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flawcheck.com/&#34;&gt;FlawCheckプライベートレジストリ&lt;/a&gt; (最近、セキュリティベンダーTenable社によって、FlawCheckのビジネスの残りの部分と一緒に、買収されました)セキュリティ重視のレジストリです。コンテナのイメージに対する脆弱性スキャンとマルウェア検出が組み込まれていて、サービスとして提供されています。無料のコンテナイメージに対する悪意のあるコードの埋め込みや悪意のあるイメージを入れられてしまう事を防ぐための特効薬はありませんが、FlawCheckでは、スキャン機能によりそのリスクを軽減することができます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; セキュリティ意識の高い企業にとっては、これはとても良い機能だと思います。厳しく規制された業界では利用が増えるでしょう。&lt;/p&gt;

&lt;h2 id=&#34;gitlab-container-レジストリ&#34;&gt;GitLab Container レジストリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.gitlab.com/ee/user/project/container_registry.html&#34;&gt;Gitlab コンテナレジストリ&lt;/a&gt;は、オンプレミスやレンタルサーバーでレジストリとして実行することができるコンテナイメージを取り扱うことができるGitLab社のソリューションです。GitLabに組み込まれているので、GitLabのデプロイのパイプラインに直接統合することができ、GitLabの他の部分とシームレスに統合することができます。あなたのチームでGitLabを使っておりツールを増やしたくなく、DevOpsでシームレスに統合してワークフローを利用することができることがメリットです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; 開発者は、Dockerイメージとソースコードが同じところから参照できると便利だと考えるでしょう。GitLabでソースコードが見られるようにGitLabコンテナレジストリで見られると便利だと思います。一方で、その他のレジストリソフトと比べてこれと言った特徴を備えているわけではありません。&lt;/p&gt;

&lt;h2 id=&#34;portus-suse提供&#34;&gt;Portus (SUSE提供)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://port.us.org/&#34;&gt;Portus&lt;/a&gt;は、技術的にはレジストリソフトではありません。しかし、Dockerレジストリの社内展開用のUIを置き換えられるフロントエンドを備えています。Portusは、アクセス制限のオプションがあり、それによりDockerレジストリに値を追加することができるよう設計されています。
これによりチームを構成したり、レジストリのユーザーだったり、個々のチーム別のアクセス権限を設定することができます(様々な面で、この機能はUnixのようなシステムのユーザー・グループの仕組みに似ています)。Portusでは、個々のユーザーレベルまたは、チームのユーザーでのコンテナイメージの更新権限を与えることができるネームスペースをレジストリに与えることをサポートし、こまかな粒度でレポジトリに対して変更することができます。また、Portusで特徴的な点は、レジストリ設定とアクセス権限を設定するためのユーザーフレンドリーなWebインターフェイスが提供されることです。（CLI構成ツール、portusctlが同様に利用可能です。）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; Dockerレジストリが好みだが、もっとセキュリティコントロールが必要とされる場合、または、よりよいアクセス制限が使いたいという理由がある場合は、Portusは強力なソリューションです。&lt;/p&gt;

&lt;h2 id=&#34;sonatype-nexus&#34;&gt;Sonatype Nexus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.sonatype.com/products-sonatype&#34;&gt;Sonatype Nexus&lt;/a&gt;は、サービスとオンプレミスでの設置をサポートする、ソースコード管理の汎用的なレジストリです。Dockerレジストリの機能以外にも、多くの機能をサポートしていますが、Dockerレジストリも使うことができます。Dockerのレジストリよりも古い歴史があるものなのでコンテナレジストリの機能ない以前よりベテランの管理者にはおなじみかもしれません。Core Nexus プラットフォームは、オープンソースですが、商用のオプションも利用できます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; 多くの企業でNexusがMavenのレポジトリとして長年利用されてきました。単純に現代的なプラットフォームのリリースに更新するだけで、組織内で新たな製品や運用スタッフの新しい技術の習得なしに独自のDockerレジストリを作成する事ができて、Dockerイメージ以外の成果物も一緒にDockerイメージを保存するサービスと同様に利用することができるようになります。&lt;/p&gt;

&lt;h2 id=&#34;vmware-harbar-レジストリ&#34;&gt;VMWare Harbar レジストリ&lt;/h2&gt;

&lt;p&gt;VMwareは、Dockerのエコシステム内ではメジャープレーヤーととらえられていないかもしれませんが、同社は確実にそのエコシステムの一員になりつつあります。&lt;a href=&#34;https://vmware.github.io/harbor/&#34;&gt;Harbarレジストリ&lt;/a&gt;は、VMwareが出したDockerイメージレジストリの答えです。このレジストリは、Dockerの基盤上にコンテナで構築されていますが、セキュリティとID管理機能が追加されています。また、単一ホストで複数のレジストリをサポートしています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベストなユースケース:&lt;/strong&gt; Harbarが重視しているのは、セキュリティとユーザー管理で、その他のレジストリではこのような機能は提供されていない為、企業が求める価値の高いレジストリの機能となっています。企業での利用に最適です。HarbarがDockerの基盤上で動くことも、どのDocker環境にもインストールが簡単であることも注目に値します。開発者がセキュリティ上やインターネットに繋げることができないオフラインのシステムでも気軽に展開することができることも、ポイントです。&lt;/p&gt;

&lt;h1 id=&#34;結論&#34;&gt;結論&lt;/h1&gt;

&lt;p&gt;一番最初の検討課題は、サービスでつかうか、オンプレミスか、両方かという環境の展開方法の種類などを含んだどういうタイプのレジストリを利用するかということ；そして、それらのアクセス制限はどうなっているのかということ；そして、その他のセキュリティオプションがどういうものがあるかということ。&lt;/p&gt;

&lt;p&gt;もちろん、必要な要件に合った正しいレジストリを選ぶことは、どういう要件を優先するかにより決まってきます。しかし、沢山の選択肢の中から、その組織にマッチしたバランスの良いレジストリを見つけるのは難しくないでしょう。&lt;/p&gt;

&lt;p&gt;著者について：ヴィンス・パワーはMedavieブルークロスのエンタープライズアーキテクトです。彼の焦点は、コア・コンピューティング（IaaSの）、IDおよびアクセス管理、アプリケーションプラットフォーム（PaaSの）、および連続配信などの主要分野におけるクラウド導入と技術計画です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.2.1</title>
      <link>http://www.rancher.jp/releasenote/v.1.2.1/</link>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.2.1/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-2-1&#34;&gt;リリース v1.2.1&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.2.1&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.1&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.1&#34;&gt;rancher-compose-v0.12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.1&#34;&gt;rancher-v0.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;重要&#34;&gt;重要!&lt;/h2&gt;

&lt;p&gt;Rancher は今後 AWS ELB をサポートせず、AWS ALB (Application Load Balancers) のみのサポートとなります。そのため、今後は ALB を利用するよう設定をアップデートしてください。&lt;/p&gt;

&lt;h2 id=&#34;1-2-へのアップグレード方法&#34;&gt;1.2 へのアップグレード方法&lt;/h2&gt;

&lt;p&gt;Rancher 1.2 ではネットワークの管理に関していくつか主要な変更が含まれます、特筆すべき点としては CNI プラグイン向けに IPSec ネットワークをリファクタリングした点とより柔軟な HAProxy 設定が可能になった新しい v2 LB サービスが挙げられます。これらの変更によりアップグレードプロセスではネットワークのダウンタイムが生じ、ネットワークの接続性を回復させるには各環境のアップグレードが必要になります。アップグレードプロセスは Rancher 自身のアップデートとそれに続く個別環境のアップデートに分けられるため現在ご利用のバージョンから適切にアップグレードするには以下の手順を参照ください:&lt;/p&gt;

&lt;h3 id=&#34;rancher-サーバーをv1-1-4からアップグレード&#34;&gt;Rancher サーバーをv1.1.4からアップグレード&lt;/h3&gt;

&lt;p&gt;必ずデータベースをバックアップしてください。Rancher 1.2.0へバージョンアップ後には、以前のバージョンに戻すことはできません。戻したい場合は、以前動いていたバージョン時点でのデータベースのスナップショットを利用するしかありません。データベースのバックアップを取ってから、ドキュメントに従ってアップグレードを開始してください。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; AWS セキュリティグループを利用している場合、必ずICMPをセキュリティグループで有効にしてください。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;環境のアップグレード&#34;&gt;環境のアップグレード&lt;/h3&gt;

&lt;p&gt;Rancherサーバーをアップグレードした後は、1.2環境に正常にアップグレードするまで、環境にアクセスできなくなります。1.2でネットワークとLBの変更される為、新しいネットワークコンポーネントに更新されて移行されるまでアップグレード処理中にネットワークが切断されます。アップデートが必要な環境ごとに&lt;strong&gt;Upgrade Now&lt;/strong&gt;*画面を表示して、いつ更新するかを決めることができる便利な機能を提供しました。更新を実行するまで、コンテナは機能し続けますが、管理機能は許可されません。この時、コンテナの再作成（ヘルスチェック）によってこれらのコンテナが動かなくなる可能性があります。HA、DNSプログラミング、ヘルスチェックなど、Rancherの関与が必要な機能は、完了するまで正常に動作しない可能性があるため、環境をなるべく早くアップグレードすることを強くお勧めします。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;今すぐアップグレード&amp;rdquo;をクリックすると、Rancherは環境のアップグレードを開始します。ご使用の環境の規模によっては最大10～20分かかる場合がありますので、しばらくお待ちください。&lt;strong&gt;Stacks&lt;/strong&gt; - &amp;gt; &lt;strong&gt;Infrastructure&lt;/strong&gt;の下にあるすべてのスタックが&lt;strong&gt;active&lt;/strong&gt;状態になっていたら、環境は正常に更新されています。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Kubernetes環境の方は、すべてのインフラストラクチャサービスが「アクティブ」状態になったら、既存のk8s v1.2.6スタックをv1.4.6にアップグレードしなければなりません。注意:k8sをアップグレードする際、既存のポッドを削除して再作成する可能性のある既知の問題があることに注意してください。ポッドがレプリケーションコントローラの一部でない場合は、再作成されません。 それに考慮して計画してください。このケースでもアップグレードプロセスは環境に応じて5～10分以上かかる場合があり、スタックがアクティブな状態になると完了します。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;アップグレードの既知の制限事項&#34;&gt;アップグレードの既知の制限事項&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Swarm環境のアップグレードはサポートされていません。DockerがDockerエンジンに移行することに関するDocker Swarmからの変更により、Swarmのサポートが最新のDocker 1.12 Swarmからになった為です。&lt;/li&gt;
&lt;li&gt;環境テンプレートオプションを表示するマイグレーション用フォルダのカタログエントリがいくつかあります。 これらのカタログ・エントリーは、古いエントリーへのロールバックをサポートしていません。 例えば、Kubernetesにすべての外部DNSエントリが含まれこれ以外にも同様のものがあります。&lt;/li&gt;
&lt;li&gt;v1ロードバランサからv2ロードバランサへのアップグレード中に、セレクタを使用するルールはアップグレードされません。 これらのルールは、環境のアップグレード後にロードバランサーに再度追加する必要があります。&lt;/li&gt;
&lt;li&gt;1.2からは、Rancherはcadvisorからの統計情報を取得せず、Dockerの統計情報から取得します。 これにより、Prometheusのようなcadvisorに依存する既存のカタログは、Dockerの統計情報から取得するように修正されるまで機能しなくなることに注意してください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;既知の問題&#34;&gt;既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;個々のコンテナ間リンクが正常に動作しない。この問題はコンテナのリンクのみが対象であり、サービスのリンクは正常に動作します。&lt;a href=&#34;https://github.com/rancher/rancher/issues/6584&#34;&gt;[#6584]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rancher サーバーにおいて自己証明書が正常に動作しない &lt;a href=&#34;https://github.com/rancher/rancher/issues/6122&#34;&gt;[#6122]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;先のリリースで UI から(docker-machine から)作成された AWS ホストが UI から削除した際に正常にクリーンアップされない &lt;a href=&#34;https://github.com/rancher/rancher/issues/6750&#34;&gt;[#6750]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;v1-2-0からの主なバグ修正&#34;&gt;v1.2.0からの主なバグ修正&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;boot2docker ホストで rancher/plugin-manager:v0.2.12にあった問題を修正、新しい rancher/network-manager:v0.2.13 ネットワークサービスがあります。ネットワークサービススタックで&amp;rdquo;アップグレード利用可能&amp;rdquo; がボタン表示されている場合は、アップグレードしてください。&lt;a href=&#34;https://github.com/rancher/rancher/issues/6874&#34;&gt;[#6874]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docker がvar/lib/docker 以外の場所にインストールされていても動くように修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6897&#34;&gt;[#6897]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ipsec やvxlan もしくはインフラストラクチャーのネットワークサービスでデフォルトのdocker0 からdocker ブリッジを構成できるように修正しました。&lt;a href=&#34;https://github.com/rancher/rancher/issues/6896&#34;&gt;[#6896]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UIが固まってしまう問題を修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6995&#34;&gt;[#6995]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rancherがデータベースを適切にクリーニングしておらず、Rancher UIがロックアップしていないのを修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/6826&#34;&gt;#6826&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/6978&#34;&gt;#6978&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/6985&#34;&gt;#6985&lt;/a&gt; ]&lt;/li&gt;
&lt;li&gt;Rancherドメインを利用する前にRancherサービス検出がホストのパスを検索することができなかったのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/7010&#34;&gt;[#7010]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ロードバランサーがホスト名を使って外部サービスをターゲットにできないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/2624&#34;&gt;[#2624]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;停止中のコンテナのログを見るを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6442&#34;&gt;[#6442]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HA構成でノードを見ることができないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6814&#34;&gt;[#6814]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;同じサービス名をターゲットとするロードバランサーからスタック名でエクスポートを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6829&#34;&gt;[#6829]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UI上でロードバランサーにホストのIPアドレスを指定することができないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6852&#34;&gt;[#6852]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンテナが自分自身のホスト名にpingできないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6855&#34;&gt;[#6855]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;古いネットワークエージェントに関連しているテーブルによりCPU使用率が高くなるのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6857&#34;&gt;[#6857]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rancher-commpose でロードバランサーが正しくRancherで作成されない問題を修正 [&lt;a href=&#34;https://github.com/rancher/rancher/issues/6865&#34;&gt;#6865&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/6920&#34;&gt;#6920&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;haproxyのカスタム設定がソートされないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6888&#34;&gt;[#6888]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GCR(Google Container Registry)からdockerイメージをプルすることができないのを修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6916&#34;&gt;[#6916]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アップグレード後にロードバランサーのhaproxy設定が表示されない問題を修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6921&#34;&gt;[#6921]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;volumes をキーとした変数が compose v2ファイルで置換されない問題を修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6936&#34;&gt;[#6936]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ホスト登録URLがhttpを受け付けないという問題を修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/6957&#34;&gt;[#6957]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rancherエージェントでproxyに関する環境変数が大文字と小文字が区別される問題を修正  &lt;a href=&#34;https://github.com/rancher/rancher/issues/7019&#34;&gt;[#7019]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ロードバランサーのログが勢いよく増える問題を修正 &lt;a href=&#34;https://github.com/rancher/rancher/issues/7028&#34;&gt;[#7028]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>リリース v1.2.0</title>
      <link>http://www.rancher.jp/releasenote/v.1.2.0/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/releasenote/v.1.2.0/</guid>
      <description>

&lt;h1 id=&#34;リリース-v1-2-0&#34;&gt;リリース v1.2.0&lt;/h1&gt;

&lt;h2 id=&#34;バージョン&#34;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rancher/server:v1.2.0&lt;/li&gt;
&lt;li&gt;rancher/agent:v1.1.0&lt;/li&gt;
&lt;li&gt;rancher/lb-service-haproxy:v0.4.2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/rancher-compose/releases/tag/v0.12.0&#34;&gt;rancher-compose-v0.12.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rancher/cli/releases/tag/v0.4.0&#34;&gt;rancher-v0.4.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt; 新しい&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;では、ロードバランサの機能を指定のHAProxyイメージに変更し、ネットワークエージェントが起動されなくなりました。 したがって、rancher/agent-instanceが必要なくなりました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;新機能-v1-1-4からの変更点&#34;&gt;新機能 (v1.1.4からの変更点)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes 1.4.6 に対応&lt;/strong&gt; - 最新のk8sに対応することに加えて、Rancherは以下の機能が提供されます:

&lt;ul&gt;
&lt;li&gt;既定のRancherオプションに加えて、ユーザーがAWSをKubernetesのクラウドプロバイダーとして選択できるようになりました。&lt;/li&gt;
&lt;li&gt;kubectl exec、logs、attachがサポートされました。&lt;/li&gt;
&lt;li&gt;k8sノード にラベル付けがサポートされました。&lt;/li&gt;
&lt;li&gt;PetSetオブジェクトを使用してステートフルアプリケーションの管理がサポートされました。&lt;/li&gt;
&lt;li&gt;環境内でのk8sクラスタアップグレードがサポートされました。&lt;/li&gt;
&lt;li&gt;Rancher UIで、k8sテンプレートを個々のアプリケーションとして管理するスタックをサポートしました。 スタックは、アプリケーションとしてアップグレード、削除することができます。&lt;/li&gt;
&lt;li&gt;Rancher UIでk8sの展開とレプリカセットをサポーターしました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker 1.12.x サポート [&lt;a href=&#34;https://github.com/rancher/rancher/issues/5179&#34;&gt;#5179&lt;/a&gt;]&lt;/strong&gt; - Docker 1.12.xがRancherでサポートされ、いくつかの機能が強化されました。

&lt;ul&gt;
&lt;li&gt;Docker Swarmモードは、環境作成時にオーケストレーションフレームワークのオプションとして利用できるようになりました。&lt;/li&gt;
&lt;li&gt;CattleはDocker 1.12.3以降のすべてのdocker runオプションをサポートするようになりました。更新された実行オプションの詳細については、&lt;a href=&#34;https://github.com/rancher/rancher/issues/4708&#34;&gt;#4708&lt;/a&gt;を参照してください。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改善 &lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/networking&#34;&gt;Network&lt;/a&gt; サポート [&lt;a href=&#34;https://github.com/rancher/rancher/issues/5256&#34;&gt;#5256&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/5276&#34;&gt;#5276&lt;/a&gt;]&lt;/strong&gt; - Container Network Interface(CNI)仕様用に作成されたカスタムネットワークプラグインのライフサイクル、配布、および更新管理を管理する機能が追加されました。

&lt;ul&gt;
&lt;li&gt;現在のRancher IPSec管理ネットワークオプションがCNIプラグインとして完全に書き直されて、Cattleとk8sオーケストレーションフレームワークの両方で利用できます。&lt;/li&gt;
&lt;li&gt;Rancherは、暗号化されていない(その為に性能の良い)クロスホスト用の管理ネットワークの代替オプションとして、VXLAN CNIプラグインが提供されるようになりました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改善 &lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/cattle/adding-load-balancers/&#34;&gt;Load Balancer v2&lt;/a&gt; のサポート [&lt;a href=&#34;https://github.com/rancher/rancher/issues/2179&#34;&gt;#2179&lt;/a&gt;]&lt;/strong&gt; - RancherのLBサービスは、以下のサポートを受けて完全に書き直されました。

&lt;ul&gt;
&lt;li&gt;SNIルーティングがLB v2で利用可能になりました。&lt;/li&gt;
&lt;li&gt;HAProxyロギングがLB v2で利用可能になりました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/2414&#34;&gt;#2414&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;既にサポートされているグローバルセクションとデフォルトセクションに加えて、フロントエンドとバックエンドのカスタム構成をHAProxy構成に追加できるようになりました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/2171&#34;&gt;#2171&lt;/a&gt;, &lt;a href=&#34;https://github.com/rancher/rancher/issues/1871&#34;&gt;#1871&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;ユーザはホスト名ルーティングルールを持つセレクタを追加できるようになりました。[&lt;a href=&#34;https://github.com/rancher/rancher/issues/2288&#34;&gt;#2288&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;v2ではポートからサービスへのマッピングをより柔軟に定義できるようになりました。 v1では、ポートをすべてのサービスに対応づける必要がありました。&lt;/li&gt;
&lt;li&gt;好きなLBエンジン(nginxなど)を使って独自のカスタムLBサービスを実装し、Rancherのメタデータサービスと統合して、コンテナがLBに登録することをリクエストするタイミングを判断できるようになりました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改善 &lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/rancher-services/storage-service/&#34;&gt;Storage Support&lt;/a&gt;&lt;/strong&gt; - カスタムk8sのflexvolumeとDockerボリュームプラグインのライフサイクル、配布、および更新管理を管理する機能が追加されました。

&lt;ul&gt;
&lt;li&gt;CattleでNFSボリュームプラグインがサポートされました。 &lt;em&gt;&lt;strong&gt;1.2からRancherNFSはNFS Dockerプラグインソリューションをサポートするようになります。Convoy-NFSは1.2からオプションとして利用できなくなり、1.3以上では利用できなくなります。&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;[実験的機能]&lt;/strong&gt;&lt;/em&gt; EC2のEBSとAWS EFSがサポートされました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;認証サポートの改善 [[&lt;a href=&#34;https://github.com/rancher/rancher/issues/5265&#34;&gt;#5265&lt;/a&gt;]]&lt;/strong&gt; - 認証のフレームワークをリライトすることでRancherに新しい認証・認可サービスを加えるためのより高い柔軟性を実現しました。

&lt;ul&gt;
&lt;li&gt;Shibboleth v3がRancherにおけるSAML 2.0サポートの認証プロバイダとしてくわえられました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全体的なパフォーマンス/スケーラビリティの改善&lt;/strong&gt; - Rancherにおけるパフォーマンスとスケーラビリティを改善するために様々な機能強化が行なわれました。

&lt;ul&gt;
&lt;li&gt;インフラストラクチャビューのUIがより環境あたりより多くのホストとコンテナを表示できるよう変更されました。&lt;/li&gt;
&lt;li&gt;スケジューリングの改善と、コンテナの並列起動を実現することでコンテナのデプロイ性能を改善しました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Rancher CLI]&lt;a href=&#34;https://github.com/rancher/rancher/issues/5265&#34;&gt;#5265&lt;/a&gt;&lt;/strong&gt; - Rancherは下に示す機能をサポートしたRancher CLIが同梱されています。

&lt;ul&gt;
&lt;li&gt;管理ホストに対するネイティブなDocker CLI操作のサポート&lt;/li&gt;
&lt;li&gt;環境管理&lt;/li&gt;
&lt;li&gt;スタック管理&lt;/li&gt;
&lt;li&gt;サービス管理&lt;/li&gt;
&lt;li&gt;ホスト管理&lt;/li&gt;
&lt;li&gt;管理ホストに対するSSHアクセス&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;リソーススケジューリング&lt;/strong&gt; - CattleではCPUとメモリのリソース制約に応じてコンテナ配置のスケジューリングをサポートしていました。管理者も同様にホストあたりのCPU/メモリのリソース制限を設定することができるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/environments/#what-is-an-environment-template&#34;&gt;環境テンプレート&lt;/a&gt;&lt;/strong&gt; - Rancehrではユーザが必要なインフラストラクチャサービス(LBやネットワークなど)を記述したテンプレートを作成できるようになりました。また、このテンプレートに基づいた環境の立ち上げをサポートするようになりました。

&lt;ul&gt;
&lt;li&gt;Rancherではユーザが環境を立ち上げ、利用することができるようデフォルトのテンプレートを継続して提供しています。&lt;/li&gt;
&lt;li&gt;環境テンプレートの作成と管理をユーザが行えるようになりました。環境テンプレートでは、環境の作成に先立ってデプロイするインフラストラクチャサービスを記述することができます。&lt;/li&gt;
&lt;li&gt;ユーザはRancherによって、コミュニティに提供されたサービスおよび自身で作成したサービスの両方を活用することができるようになりました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAサポートの改善(&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/installing-rancher/installing-server/#launching-rancher-server---full-activeactive-ha&#34;&gt;http://docs.rancher.com/rancher/v1.2/en/installing-rancher/installing-server/#launching-rancher-server---full-activeactive-ha&lt;/a&gt;)&lt;/strong&gt; - Rancher HAの設定と管理が劇的にシンプルになりました。 複数ノードへのRancherのデプロイに際して、RedisとZookeeperが不要になりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;さらに&amp;hellip;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Rancherのデプロイにおいて利用可能なDocker Registryのみを含んだホワイトリストの作成を管理者権限を用いてできるようになりました。&lt;/li&gt;
&lt;li&gt;イメージにprefixがなかった場合に利用するデフォルトのDockerレジストリをadminが指定できるようになりました。&lt;/li&gt;
&lt;li&gt;カタログのポートおよびラベルへのバインディングが可能になりました。&lt;/li&gt;
&lt;li&gt;gitブランチを取り扱うためのカタログサポートがくわえられました。&lt;/li&gt;
&lt;li&gt;Rancher AgentをGo言語でリライトしました。&lt;/li&gt;
&lt;li&gt;Docker Machineがアップデートされ、新しくアップデートされたUIとともにAzureが新しいホストドライバに加えられました。&lt;/li&gt;
&lt;li&gt;RancherOS 0.6.0以降がサポートされました。&lt;/li&gt;
&lt;li&gt;サービスが適切に起動しなかった際、ユーザにより良いロギングを提供することを目的として、サービスログのジャーナリング機能を追加しました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-2-にアップグレードするには&#34;&gt;1.2 にアップグレードするには&lt;/h2&gt;

&lt;p&gt;Rancher 1.2では、ネットワーク管理方法について大幅に変更されました。特にIPsecネットワークがCNIプラグインを利用するようにリファクタリングされ、新しいv2 LBサービスには柔軟性の高いHAProxy構成のプロバイダーをユーザーが使えるようになりました。この変更の影響で、アップグレードプロセスで&lt;strong&gt;&lt;code&gt;ネットワークのダウン時間が発生します&lt;/code&gt;&lt;/strong&gt; また、ネットワークの環境の再接続のために各環境をアップグレードする必要があります。アップグレードプロセスはそれぞれの環境によりRancherアップデート方法が分かれているので、以下の手順に従って現在のバージョンを適切な方法で1.2にアップグレードしてください:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rancher サーバーアップグレード&lt;/strong&gt;
必ずデータベースをバックアップしてください。Rancher 1.2.0へバージョンアップ後には、以前のバージョンに戻すことはできません。戻したい場合は、以前動いていたバージョン時点でのデータベースのスナップショットを利用するしかありません。データベースのバックアップを取ってから、&lt;a href=&#34;http://docs.rancher.com/rancher/v1.2/en/upgrading/&#34;&gt;per the docs&lt;/a&gt;に従ってアップグレードを開始してください。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; AWS セキュリティグループを利用している場合、必ずICMPをセキュリティグループで有効にしてください。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;環境のアップグレード&lt;/strong&gt;&lt;br /&gt;
Rancherサーバーをアップグレードした後は、1.2環境に正常にアップグレードするまで、環境にアクセスできなくなります。1.2でネットワークとLBの変更される為、新しいネットワークコンポーネントに更新されて移行されるまでアップグレード処理中にネットワークが切断されます。アップデートが必要な環境ごとに&lt;strong&gt;Upgrade Now&lt;/strong&gt;*画面を表示して、いつ更新するかを決めることができる便利な機能を提供しました。更新を実行するまで、コンテナは機能し続けますが、管理機能は許可されません。この時、コンテナの再作成（ヘルスチェック）によってこれらのコンテナが動かなくなる可能性があります。HA、DNSプログラミング、ヘルスチェックなど、Rancherの関与が必要な機能は、完了するまで正常に動作しない可能性があるため、環境をなるべく早くアップグレードすることを強くお勧めします。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;今すぐアップグレード&amp;rdquo;をクリックすると、Rancherは環境のアップグレードを開始します。ご使用の環境の規模によっては最大10〜20分かかる場合がありますので、しばらくお待ちください。&lt;strong&gt;Stacks&lt;/strong&gt; - &amp;gt; &lt;strong&gt;Infrastructure&lt;/strong&gt;の下にあるすべてのスタックが&lt;strong&gt;active&lt;/strong&gt;状態になっていたら、環境は正常に更新されています。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Kubernetes環境の方は、すべてのインフラストラクチャサービスが「アクティブ」状態になったら、既存のk8s v1.2.6スタックをv1.4.6にアップグレードしなければなりません。注意:k8sをアップグレードする際、既存のポッドを削除して再作成する可能性のある既知の問題があることに注意してください。ポッドがレプリケーションコントローラの一部でない場合は、再作成されません。 それに考慮して計画してください。このケースでもアップグレードプロセスは環境に応じて5〜10分以上かかる場合があり、スタックがアクティブな状態になると完了します。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;既知のアップグレードの制限事項&#34;&gt;既知のアップグレードの制限事項&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Swarm環境のアップグレードはサポートされていません。DockerがDockerエンジンに移行することに関するDocker Swarmからの変更により、Swarmのサポートが最新のDocker 1.12 Swarmからになった為です。&lt;/li&gt;
&lt;li&gt;環境テンプレートオプションを表示するマイグレーション用フォルダのカタログエントリがいくつかあります。 これらのカタログ・エントリーは、古いエントリーへのロールバックをサポートしていません。 例えば、Kubernetesにすべての外部DNSエントリが含まれこれ以外にも同様のものがあります。&lt;/li&gt;
&lt;li&gt;v1ロードバランサからv2ロードバランサへのアップグレード中に、セレクタを使用するルールはアップグレードされません。 これらのルールは、環境のアップグレード後にロードバランサーに再度追加する必要があります。&lt;/li&gt;
&lt;li&gt;1.2からは、Rancherはcadvisorからの統計情報を取得せず、Dockerの統計情報から取得します。 これにより、Prometheusのようなcadvisorに依存する既存のカタログは、Dockerの統計情報から取得するように修正されるまで機能しなくなることに注意してください。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>クイックスタートガイド</title>
      <link>http://www.rancher.jp/docs/qsg/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/docs/qsg/</guid>
      <description>

&lt;h2 id=&#34;クイック-スタート-ガイド&#34;&gt;クイック スタート ガイド&lt;/h2&gt;

&lt;p&gt;このガイドでは、1台のLinuxサーバーに全てインストールして動く、最も簡単なRancherをインストールしてみます。&lt;/p&gt;

&lt;h3 id=&#34;linuxホストを準備する&#34;&gt;Linuxホストを準備する&lt;/h3&gt;

&lt;p&gt;3.10 + のカーネルが最低限入っている64 ビット Ubuntu 16.04 と Linux ホストを準備します。 ノートパソコンでも、仮想環境でも、物理サーバーも利用可能です。 Linux ホストには少なくとも &lt;strong&gt;1GB&lt;/strong&gt; のメモリがあることを確認してください。 &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; をホストにインストールします。&lt;/p&gt;

&lt;p&gt;サーバーにDockerをインストールするには、 &lt;a href=&#34;https://docs.docker.com/engine/installation/linux/ubuntulinux/&#34;&gt;Docker&lt;/a&gt; 社の手引きを参照してください。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 現在、Windows と Mac のDockerはサポートされていません。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;rancher-サーバータグ&#34;&gt;Rancher サーバータグ&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;rancher/server:latest&lt;/code&gt; タグはRancherの安定版ビルドにつけられます。Rancher社が推奨している本番環境展開用です。 各マイナーリリースタグに対して、それぞれのバージョンでのドキュメントを提供します。&lt;/p&gt;

&lt;p&gt;もし、CI自動化フレームワークで検証済の最新開発版のビルドに興味があれば、最新の開発版のリリースタグが付いた&lt;a href=&#34;https://github.com/rancher/rancher/releases&#34;&gt;リリースページ&lt;/a&gt; を確認してください。 このリリースは本番環境デプロイ用ではありません。 開発ビルドには、全て開発リリースであることを示す&lt;code&gt;*-pre{n}&lt;/code&gt; という接尾辞が付加されます。 &lt;code&gt;rc{n}&lt;/code&gt; サフィックスの付いているリリースはいずれも使用しないでください。 &lt;code&gt;rc&lt;/code&gt; ビルドは、Rancherチームが開発版ビルドをテストするためのものです。&lt;/p&gt;

&lt;h3 id=&#34;rancherサーバーを動かす&#34;&gt;Rancherサーバーを動かす&lt;/h3&gt;

&lt;p&gt;Rancherサーバーを起動するコマンドは1つだけです。コンテナを起動したら、コンテナのログを調べて、サーバが起動して動いているかを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server
# Rancherのログを表示
$ sudo docker logs -f &amp;lt;CONTAINER_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rancherサーバーの起動に数分おまちください。 &lt;code&gt;.... Startup Succeeded, Listening on port....&lt;/code&gt; が表示されたら、RancherのUIは起動して稼働中です。 ログのこの行が表示されたら、ほとんど設定は終了です。 この出力の後に追加のログが出力される可能性があるので、これが初期起動時のログの最後の行であるとは限りません。&lt;/p&gt;

&lt;p&gt;UIは &lt;code&gt;8080&lt;/code&gt; ポートで動いているので、表示するには &lt;code&gt;http://&amp;lt;SERVER_IP&amp;gt;:8080&lt;/code&gt; をブラウザーで開いてください。 Rancherサーバーとブラウザーが同じホストで動いている場合は、&lt;code&gt;http://192.168.1.100:8080&lt;/code&gt; のように実IPを使ってください。&lt;code&gt;http://localhost:8080&lt;/code&gt; や &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; としないようにしてください。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; Rancherサーバーにはアクセス制限が設定されておらず、このIPアドレスにアクセスできる誰でもこのUIとAPIを利用できます。 &lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/configuration/access-control/&#34;&gt;アクセス制限&lt;/a&gt;を設定することをお勧めします。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;ホストを追加&#34;&gt;ホストを追加&lt;/h3&gt;

&lt;p&gt;わかりやすくするためにRancherサーバーを実行しているサーバーをRancherのホストとして追加します。実際の運用では、専用のRancherを実行するホストを動かすことをお勧めします。&lt;/p&gt;

&lt;p&gt;ホストを追加するには、UIから &lt;strong&gt;Infrastructure&lt;/strong&gt; をクリックして、&lt;strong&gt;Hosts&lt;/strong&gt; ページを表示してください。 &lt;strong&gt;Add Host&lt;/strong&gt; をクリックします。 Rancherで利用するURLを選択するように指示されます。 このURLは、Rancherサーバーが動いているURLになり、これから追加するRancherホストから接続可能なものでなくてはなりません。 この設定は、RancherサーバーがファイヤウォールでNATされたり、ロードバランサーを介してインターネットに公開される場合に便利です。 ホストに&lt;code&gt;192.168.*.*&lt;/code&gt;のようなプライベートやローカルIPなアドレスがついていた場合、Rancherサーバーにホストが本当にURLにアクセスできるかどうかを尋ねる警告が表示されます。&lt;/p&gt;

&lt;p&gt;今のところ、これらの警告は無視してRancherサーバーホスト自体を追加することができます。 &lt;strong&gt;Save&lt;/strong&gt; をクリックします。 デフォルトでは、Rackherエージェントコンテナを起動するDockerコマンドを提供する &lt;strong&gt;Custom&lt;/strong&gt; オプションが選択されます。 RancherがDocker Machineを使用してホストを起動するクラウドプロバイダ向けのオプションもあります。&lt;/p&gt;

&lt;p&gt;UIでホスト上でオープンにするポートの指示とオプションの設定項目が表示されます。Rancherサーバーも稼動しているホストを追加するので、このホストで使用するパブリックIPを追加する必要があります。 このオプションで入力されたIPにより、カスタムコマンドでの環境変数が自動的に変更されます。&lt;/p&gt;

&lt;p&gt;Rancherサーバーを実行しているホストでこのコマンドを実行します。&lt;/p&gt;

&lt;p&gt;Rancher UIで &lt;strong&gt;Close&lt;/strong&gt; をクリックすると、&lt;strong&gt;Infrastructure&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Hosts&lt;/strong&gt; 表示に戻ります。 数分後にホストが自動的に表示されます。&lt;/p&gt;

&lt;h3 id=&#34;インフラストラクチャーサービス&#34;&gt;インフラストラクチャーサービス&lt;/h3&gt;

&lt;p&gt;最初にRancherにログインすると自動的に &lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/environments/&#34;&gt;environment&lt;/a&gt;になります。この&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/rancher-services/&#34;&gt;infrastructure services&lt;/a&gt;を開始するためにデフォルトのcattle &lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/environments/#what-is-an-environment-template&#34;&gt;environment template&lt;/a&gt;が選択されます。この[infrastructure services]は、Rancherの持っている&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/rancher-services/dns-service/&#34;&gt;dns&lt;/a&gt;や&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/rancher-services/metadata-service&#34;&gt;metadata&lt;/a&gt;、&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/rancher-services/networking&#34;&gt;networking&lt;/a&gt;そして&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/cattle/health-checks/&#34;&gt;health checks&lt;/a&gt;のような機能の利点を活用するため有利なものです。これらのインフラストラクチャスタックは、&lt;strong&gt;Stacks&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Infrastructure&lt;/strong&gt; にあります。これらのスタックは、ホストがRancherに完全に追加されるまで、&lt;code&gt;不健全な&lt;/code&gt; 状態です。ホストを追加した後は、サービスを追加する前にすべてのインフラストラクチャスタックが &lt;code&gt;active&lt;/code&gt; になるまで待つことをお勧めします。&lt;/p&gt;

&lt;p&gt;ホストでは、&lt;strong&gt;Show System&lt;/strong&gt; チェックボックスをクリックしない限り、インフラストラクチャサービスのコンテナは非表示になります。&lt;/p&gt;

&lt;h3 id=&#34;uiを使用してコンテナを作成する&#34;&gt;UIを使用してコンテナを作成する&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Stacks&lt;/strong&gt; 画面に移動して、まだサービスがない場合は、Welcome画面の &lt;strong&gt;Define a service&lt;/strong&gt; ボタンをクリックします。 Rancherに既にサービスが存在する場合は、既存のスタックの &lt;strong&gt;Add Service&lt;/strong&gt; をクリックするか、新しいスタックを作成してサービスを追加できます。 新しいスタックを作成する必要がある場合は、 &lt;strong&gt;Add Stack&lt;/strong&gt; をクリックし、名前と説明を入力して &lt;strong&gt;Create&lt;/strong&gt; をクリックします。 次に新規スタックで &lt;strong&gt;Add Service&lt;/strong&gt; をクリックします。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;first-container&amp;rdquo;のような名前でサービスを追加します。 デフォルトの設定を使用して &lt;strong&gt;Create&lt;/strong&gt; をクリックするだけです。 Rancherは、ホスト上でコンテナの起動を開始します。ホストのIPアドレスにかかわらず、Rancherがipsecインフラストラクチャサービスで管理オーバーレイネットワークを作成したため、最初のコンテナのIPアドレスは &lt;code&gt;10.42 *.*&lt;/code&gt; の範囲になります。管理オーバーレイネットワークで、コンテナが異なるホスト間で相互に通信できるように管理しています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;first-container&lt;/em&gt;&lt;/strong&gt; のドロップダウンをクリックすると、コンテナの停止、ログの表示、コンテナコンソールへのアクセスなどの管理アクションを実行できます。&lt;/p&gt;

&lt;h3 id=&#34;dockerのcliを直接使ってコンテナを作成する&#34;&gt;DockerのCLIを直接使ってコンテナを作成する&lt;/h3&gt;

&lt;p&gt;Rancherは、コンテナがUIの外で作成されていてもホスト上のコンテナを表示できます。ホストのシェル端末からコンテナを作成してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -it --name=second-container ubuntu:14.04.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UI上では、 &lt;strong&gt;&lt;em&gt;second-container&lt;/em&gt;&lt;/strong&gt; がホスト上にポップアップ表示されます。&lt;/p&gt;

&lt;p&gt;RancherはDockerデーモンで発生するイベントに反応し、実際の動作状況とRancherでの状況を調整します。 &lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/native-docker/&#34;&gt;native docker CLI&lt;/a&gt;を使用してRancherを利用する方法の詳細を読むことができます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;second-container&lt;/em&gt;&lt;/strong&gt; のIPアドレスを見ると、&lt;code&gt;10.42.*.*&lt;/code&gt; の範囲には&lt;strong&gt;ない&lt;/strong&gt;ことがわかります。 これは、Dockerデーモンによって割り当てられた通常のIPアドレスです。 CLIを使用してDockerコンテナを作成するとこのようになります。&lt;/p&gt;

&lt;p&gt;CLIを使用してRancherのオバーレイネットワークからIPアドレスのDockerコンテナを作成するにはどうすればよいでしょうか？ しなければならないこと、コマンドにラベル(i.e. &lt;code&gt;io.rancher.container.network=true&lt;/code&gt;)を追加するだけで、Rancherは、このコンテナが&lt;code&gt;管理&lt;/code&gt;ネットワークに属しなければならないと認識します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -it --label io.rancher.container.network=true ubuntu:14.04.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;マルチコンテナアプリケーションの作成&#34;&gt;マルチコンテナアプリケーションの作成&lt;/h3&gt;

&lt;p&gt;個別のコンテナを作成する方法と、ホスト間ネットワークでそれらがどのように接続されるかを説明しました。 しかし、実際のアプリケーションのほとんどは複数のサービスで構成されており、各サービスは複数のコンテナで構成されています。 たとえば、&lt;a href=&#34;http://sdelements.github.io/lets-chat/&#34;&gt;LetsChat&lt;/a&gt;アプリケーションは、次のようなサービスで構成されます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ロードバランサー ロードバランサーはインターネットからのリクエストを&amp;rdquo; LetsChat&amp;rdquo; アプリケーションに中継します。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ウェブ&lt;/em&gt; サービス &amp;ldquo;LetsChat&amp;rdquo; コンテナ2つで構成されます。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;データーベース&lt;/em&gt; サービス &amp;ldquo;Mongo&amp;rdquo; コンテナ1つで構成されます。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ロードバランサーは&lt;em&gt;ウェブ&lt;/em&gt; サービス(例 LetsChat) に接続し、&lt;em&gt;ウェブ&lt;/em&gt; サービスは&lt;em&gt;データーベース&lt;/em&gt; サービス(例 Mongo)にリンクします。&lt;/p&gt;

&lt;p&gt;このセクションでは、Rancherに &lt;a href=&#34;http://sdelements.github.io/lets-chat/&#34;&gt;LetsChat&lt;/a&gt; アプリケーションのコンテナを作成して展開する方法を説明します。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stacks&lt;/strong&gt; 画面に移動します。まだサービスがない場合は、Welcome画面の &lt;strong&gt;Define a Service&lt;/strong&gt; ボタンをクリックします。 Rancherに既にサービスが存在する場合は、既存のスタックの &lt;strong&gt;Add Service&lt;/strong&gt; をクリックするか、新しいスタックを作成してサービスを追加できます。 新しいスタックを作成する必要がある場合は、 &lt;strong&gt;Add Stack&lt;/strong&gt; をクリックし、名前と説明を入力して &lt;strong&gt;Create&lt;/strong&gt; をクリックします。 次に新規スタックで &lt;strong&gt;Add Service&lt;/strong&gt; をクリックします。&lt;/p&gt;

&lt;p&gt;まず、&lt;code&gt;mongo&lt;/code&gt; イメージを使い &lt;em&gt;データベース&lt;/em&gt; というサービスを作成します。 &lt;strong&gt;Create&lt;/strong&gt; をクリックします。&lt;em&gt;データーベース&lt;/em&gt; サービスが含まれるスタックページがすぐに表示されます。&lt;/p&gt;

&lt;p&gt;次に、もう一度 &lt;strong&gt;Add Service&lt;/strong&gt; をクリックして、別のサービスを追加します。 LetsChatサービスと&lt;em&gt;データーベース&lt;/em&gt; サービスとをリンクをさせます。 &lt;code&gt;sdelements/lets-chat&lt;/code&gt;イメージを使用して、&lt;code&gt;web&lt;/code&gt; 名前を付けます。UI上でスライダを動かして、サービスのスケールをコンテナ2つにします。 &lt;strong&gt;Service Links&lt;/strong&gt; に&lt;code&gt;mongo&lt;/code&gt; という名前の &lt;em&gt;データベース&lt;/em&gt; サービスを追加します。 Dockerの場合と同様に、Rancherは、&lt;code&gt;mongo&lt;/code&gt; の名前を選択すると、リンクされたデータベースとして &lt;code&gt;letschat&lt;/code&gt; イメージに必要な環境変数をリンクします。 &lt;strong&gt;Create&lt;/strong&gt; をクリックします。&lt;/p&gt;

&lt;p&gt;最後にロードバランサーを作成します。 &lt;strong&gt;Add Service&lt;/strong&gt; ボタンの横にあるドロップダウンメニューアイコンをクリックします。 &lt;strong&gt;Add Load Balancer&lt;/strong&gt; を選択します。 &lt;code&gt;letschatapplb&lt;/code&gt; のような名前を入力し、接続先アプリケーションにアクセスするために使用するホスト上のソースポート(例 &lt;code&gt;80&lt;/code&gt;)とターゲットサービス(例 &lt;em&gt;web&lt;/em&gt;)とターゲットポート(例 &lt;code&gt;8080&lt;/code&gt;) を選択します。 この場合、&lt;em&gt;ウェブ&lt;/em&gt; サービスで &lt;code&gt;8080&lt;/code&gt;番ポートを使用します。&lt;/p&gt;

&lt;p&gt;LetsChatアプリケーションが完成しました！ &lt;strong&gt;Stacks&lt;/strong&gt;画面で、ロードバランサが公開しているポートをリンクとして見つけることができます。 そのリンクをクリックすると、新しいブラウザが開き、LetsChatアプリケーションが表示されます。&lt;/p&gt;

&lt;h3 id=&#34;rancher-cli-を使用して複数コンテナアプリケーションを作成する&#34;&gt;Rancher CLI を使用して複数コンテナアプリケーションを作成する&lt;/h3&gt;

&lt;p&gt;このセクションでは、&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/cli/&#34;&gt;Rancher CLI&lt;/a&gt; というコマンドラインツールを使用して前のセクションで作成したと同じ&lt;a href=&#34;http://sdelements.github.io/lets-chat/&#34;&gt;LetsChat&lt;/a&gt;アプリケーションを作成して展開する方法を説明します。&lt;/p&gt;

&lt;p&gt;Rancherサービスが起動したときに、Rancher CLIツールは一般的なDocker Composeツールと同じように機能します。 これは、同じように &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを読み込んでRancherにアプリケーションをデプロイします。 &lt;code&gt;rancher-compose.yml&lt;/code&gt; ファイルを利用すると &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを拡張して上書きする追加の属性を指定することができます。&lt;/p&gt;

&lt;p&gt;前のセクションでは、ロードバランサを備えたLetsChatアプリケーションを作成しました。 Rancherで作成していた場合、スタックのドロップダウンメニューから &lt;strong&gt;Export Config&lt;/strong&gt; を選択して、UIから直接ファイルをダウンロードできます。 &lt;code&gt;docker-compose.yml&lt;/code&gt; と &lt;code&gt;rancher-compose.yml&lt;/code&gt; ファイルは次のようになります。&lt;/p&gt;

&lt;h4 id=&#34;example-docker-compose-yml&#34;&gt;Example docker-compose.yml&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;
services:
  letschatapplb:
    #If you only have 1 host and also created the host in the UI,
    # you may have to change the port exposed on the host.
    ports:
    - 80:80/tcp
    labels:
      io.rancher.container.create_agent: &#39;true&#39;
      io.rancher.container.agent.role: environmentAdmin
    image: rancher/lb-service-haproxy:v0.4.2
  web:
    labels:
      io.rancher.container.pull_image: always
    tty: true
    image: sdelements/lets-chat
    links:
    - database:mongo
    stdin_open: true
  database:
    labels:
      io.rancher.container.pull_image: always
    tty: true
    image: mongo
    stdin_open: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;example-rancher-compose-yml&#34;&gt;Example rancher-compose.yml&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;vversion: &#39;2&#39;
services:
  letschatapplb:
    scale: 1
    lb_config:
      certs: []
      port_rules:
      - hostname: &#39;&#39;
        path: &#39;&#39;
        priority: 1
        protocol: http
        service: quickstartguide/web
        source_port: 80
        target_port: 8080
    health_check:
      port: 42
      interval: 2000
      unhealthy_threshold: 3
      healthy_threshold: 2
      response_timeout: 2000
  web:
    scale: 2
  database:
    scale: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
フッター右側にある &lt;strong&gt;Download CLI&lt;/strong&gt; をクリックして、RancherのUIからRancher CLIバイナリをダウンロードします。 Windows、Mac、Linux用のバイナリを提供しています。&lt;/p&gt;

&lt;p&gt;Rancher CLIを使用してRancherでサービスを開始するには、いくつか環境変数を設定する必要があります。 Rancher UIで&lt;a href=&#34;{{site.baseurl}}/rancher/{{page.version}}/{{page.lang}}/api/api-keys/&#34;&gt;account API Key&lt;/a&gt;を作成します。 &lt;strong&gt;API&lt;/strong&gt; をクリックし、&lt;strong&gt;Add Account API Key&lt;/strong&gt; をクリックします。 ユーザー名 (アクセスキー) とパスワード (秘密キー) を保存します。 Rancher CLIに必要な次の環境変数を設定します: &lt;code&gt;RANCHER_URL&lt;/code&gt;、&lt;code&gt;RANCHER_ACCESS_KEY&lt;/code&gt; と &lt;code&gt;RANCHER_SECRET_KEY&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set the url that Rancher is on
$ export RANCHER_URL=http://server_ip:8080/
# Set the access key, i.e. username
$ export RANCHER_ACCESS_KEY=&amp;lt;username_of_key&amp;gt;
# Set the secret key, i.e. password
$ export RANCHER_SECRET_KEY=&amp;lt;password_of_key&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
&lt;code&gt;docker-compose.yml&lt;/code&gt; と &lt;code&gt;rancher-compose.yml&lt;/code&gt; を保存したディレクトリに移動し、コマンドを実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rancher -p NewLetsChatApp up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rancherで &lt;strong&gt;NewLetsChatApp&lt;/strong&gt; という新しいスタックが作成され、サービスがすべて起動します&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rancher Event</title>
      <link>http://www.rancher.jp/event-list/</link>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/event-list/</guid>
      <description>

&lt;h1 id=&#34;rancher-meetup&#34;&gt;Rancher Meetup&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rancherjp.connpass.com/event/45768/&#34;&gt;【会場変更 →渋谷】Rancher Meetup Tokyo #3 - connpass&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rancher.jp/content/2017/01/11/rancher-meetup-03/&#34;&gt;Rancher Meetup Tokyo #3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rancherjp.connpass.com/event/44092/&#34;&gt;Rancher Meetup Tokyo #2 - connpass&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rancherjp.connpass.com/event/46208/&#34;&gt;Rancher Meetup Tokyo #2 - 懇親会 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rancherjp.connpass.com/event/40326/&#34;&gt;Rancher Meetup Tokyo #1 - connpass&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rancher.jp/content/2016/10/07/rancher-meetup-01/&#34;&gt;Rancher Meetup Tokyo #1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;rancher-もくもく勉強会&#34;&gt;Rancher もくもく勉強会&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rancherjp.connpass.com/event/47871/&#34;&gt;Rancher もくもく勉強会 #2 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://connpass.com/event/41997/&#34;&gt;Rancher もくもく勉強会 #1 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rancher もくもく勉強会 #1</title>
      <link>http://www.rancher.jp/study/rancher-workshop-01/</link>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/study/rancher-workshop-01/</guid>
      <description>&lt;p&gt;Rancher もくもく勉強会 #1 - connpass
&lt;a href=&#34;http://connpass.com/event/41997/&#34;&gt;http://connpass.com/event/41997/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;挨拶&lt;/p&gt;

&lt;p&gt;自己紹介&lt;/p&gt;

&lt;p&gt;自己紹介のつもりが、名刺交換会から開始になってしまいました。&lt;/p&gt;

&lt;p&gt;・初心者向けチーム
・もくもくチーム
に分かれて開始しました。
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/27/DSC_0070.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;新藤さんが初心者向けチームにRancherの概要説明中&lt;/p&gt;

&lt;p&gt;chiba go さんがRancherとDockerの解説
・Rancherの日本語訳は、Chibaさんがされた
・Rancherのインストールは、コマンド一発 以上　とても簡単
・クラウドのサポートも楽ちん。
・AWSにあるRancherOSのイメージを使えば、ホストの追加もOK。&lt;/p&gt;

&lt;p&gt;＃Chiba goさんの深い話がつづく
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/27/DSC_0071.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;ネットワークとかスケジューリングとかは、K8sとかが担当するべき範囲
　docker-compose.ymlは、Dockerのコンテナの関係性を示す。
　rancher-compose.ymlは、Rancherのスケールするとかの設定を示す。&lt;/p&gt;

&lt;p&gt;コンテナイメージは、どこからか取ってくるしかない。
CIツールは、別途必要になる。&lt;/p&gt;

&lt;p&gt;yo コマンドでRancherのCatalogテンプレートを作ってくれる。&lt;/p&gt;

&lt;p&gt;Kubernetesと、Cattleでのインフラの大きいので、カタログでも動く、動かないというのが実はある。
越えられない壁があって。。&lt;/p&gt;

&lt;p&gt;Rancherのいいところは、Dockerのコマンドラインではちょっとお。と言う人向けにDockerの民主化の為に必要&lt;/p&gt;

&lt;p&gt;@cyberblack28 さんのDocker解説
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/27/DSC_0072.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;Dockerの手順は、自分の手で打つと勉強になるよ。
VMで動かす場合は、ネットワークが注意&lt;/p&gt;

&lt;p&gt;@Cyberduck28 さんが解説してくれたDockerの資料は、以下です。
「Docker～WordPress環境を作ってみる ハンズオン編」
&lt;a href=&#34;http://www.slideshare.net/cyberblackvoom/linaction-theme-docker&#34;&gt;http://www.slideshare.net/cyberblackvoom/linaction-theme-docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dockerのいいところ
1. オーバーヘッドが少ない。
2. OSの部分まで入っているのでデプロイが簡単。
3. インフラ環境によらずに管理が楽になりました。&lt;/p&gt;

&lt;p&gt;Docker勉強会になりつつありｗ。&lt;/p&gt;

&lt;p&gt;Dockerのダメなところ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ステートレスな形で構成しないとダメです。&lt;/li&gt;
&lt;li&gt;トラブルをちゃんと解析しない。&lt;/li&gt;
&lt;li&gt;それなりにマッチする環境や方法を踏まえないとダメです。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dockerをエンタープライズに適用することの難しさ。
&amp;mdash;&amp;gt;発想が変わらないとなかなか難しい。&lt;/p&gt;

&lt;p&gt;Googleとかとかと日本の環境との違いが大きすぎる。&lt;/p&gt;

&lt;p&gt;業務系の開発からでは、コンテナの発想が大きくちがうのでワケワカ&lt;/p&gt;

&lt;p&gt;IoT などの場合では、サーバーが何万台とある全てのIoTデバイスをコントロールするのは現実的ではないのではと思う。途中IoTのデバイスを中継する中継基地サーバーが必要なのではないだろうか。コンテナーはそういう用途に非常に向いていると思う。&lt;/p&gt;

&lt;p&gt;それを受けて、Chiba go さんのIoT 関連話。Resin.io でのドローン内でコンテナが動いている話を紹介。参加者一同驚嘆&lt;/p&gt;

&lt;p&gt;Home | Resin.io
&lt;a href=&#34;https://resin.io/&#34;&gt;https://resin.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rancherでコンテナが100台とかになったら画面がどうなるか気になる。
「そのうちグルーピングできるようになるんじゃないだろうか？」
「検索インターフェースも必要だよね」
「画面は、レスポンシブ対応もありますよ。」&lt;/p&gt;

&lt;p&gt;Rancherでのモニタリングとか、シェルとかもGUIから接続できますよ。&lt;/p&gt;

&lt;p&gt;新藤さんが、今日の本題 3行でDocker+Rancherを解説&lt;/p&gt;

&lt;p&gt;@ynott が DockerとRancherの関係を図で解説
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/27/DSC_0075.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;「次回は、12月ぐらいに Meetup しましょう。Google のIan Lewis と会話中」&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rancher Meetup Tokyo #1</title>
      <link>http://www.rancher.jp/content/2016/10/07/rancher-meetup-01/</link>
      <pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/content/2016/10/07/rancher-meetup-01/</guid>
      <description>

&lt;h2 id=&#34;今熱い盛り上がりを見せているrancherの勉強会-rancher-meetup-tokyo-1-参加レポート&#34;&gt;今熱い盛り上がりを見せているRANCHERの勉強会「Rancher Meetup Tokyo #1」参加レポート！&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://snickerjp.blogspot.jp/2016/10/rancher-meetup-tokyo-vol1.html&#34;&gt;http://snickerjp.blogspot.jp/2016/10/rancher-meetup-tokyo-vol1.html&lt;/a&gt;&lt;/p&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_184910.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;p&gt;コンテナオーケストレーション管理ツールとして、以前から注目が高かった「RANCHER」&lt;br /&gt;
初のMeetupが開催されたので、かんたんなレポートです！&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;もくじ&#34;&gt;もくじ&lt;/h3&gt;

&lt;p&gt;-「Rancher Overview (DEMO)」（Bill Maxwell 氏）(#「Rancher Overview (DEMO)」（Bill Maxwell 氏）)&lt;br /&gt;
-「Rancher CLI + Jenkins で実現するCI/CD」(#「Rancher CLI + Jenkins で実現するCI/CD」)&lt;br /&gt;
- RANCHERのCEO (Sheng Liang 氏)のメッセージビデオ(#RANCHERのCEO (Sheng Liang 氏)のメッセージビデオ)&lt;br /&gt;
- LT(#LT)&lt;br /&gt;
- 参加者プレゼントで「RANCHER」のTシャツ(#参加者プレゼントで「RANCHER」のTシャツ)&lt;br /&gt;
- 感想(#感想)&lt;br /&gt;
- 参考サイト(#参考サイト)&lt;/p&gt;

&lt;h2 id=&#34;rancher-overview-demo-bill-maxwell-氏&#34;&gt;「Rancher Overview (DEMO)」（Bill Maxwell 氏）&lt;/h2&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_185051.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;p&gt;全編英語で、スライド見ているしかなかった発表&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/DSC02584.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/DSC02586.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;
&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/DSC02587.JPG&#34; alt=&#34;&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-cli-jenkins-で実現するci-cd&#34;&gt;「Rancher CLI + Jenkins で実現するCI/CD」&lt;/h2&gt;

&lt;p&gt;最近出てきたという「Rancher CLI」の紹介とJenkinsを絡めた
「継続的インテグレーションとデリバリ」  かなりかっこよかったんですが、そんなことできるかな？？&lt;/p&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_194116.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rancher/cli&#34;&gt;https://github.com/rancher/cli&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancherのceo-sheng-liang-氏-のメッセージビデオ&#34;&gt;RANCHERのCEO (Sheng Liang 氏)のメッセージビデオ&lt;/h2&gt;

&lt;p&gt;ちょっと日本語、その後英語なメッセージビデオ&lt;/p&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_200700_001.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;h2 id=&#34;lt&#34;&gt;LT&lt;/h2&gt;

&lt;p&gt;LTの内容も濃くて、すごかった！&lt;/p&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_210045.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;p&gt;(&lt;a href=&#34;http://qiita.com/cyberblack28/items/d1c6259c137c7c71703b&#34;&gt;http://qiita.com/cyberblack28/items/d1c6259c137c7c71703b&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;参加者プレゼントで-rancher-のtシャツ&#34;&gt;参加者プレゼントで「RANCHER」のTシャツ&lt;/h2&gt;

&lt;p&gt;来場者全員にTシャツがプレゼントされました！豪華！&lt;/p&gt;

&lt;img src=&#34;http://www.rancher.jp/images/2016/10/07/20161007_184910.jpg&#34; alt=&#34;&#34;&gt;&lt;/img&gt;

&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;

&lt;p&gt;RANCHERって結構サクッと動いちゃって、なんかうまいことやってくれるUIツールだなー！&lt;br /&gt;
と、思っていたけど。&lt;br /&gt;
エンタープライズ向けに設計されているし、なんか色々使ってうまく出来ないかな？？&lt;/p&gt;

&lt;p&gt;dockerのSwarm modeへの対応待たれますねー！&lt;/p&gt;

&lt;h2 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h2&gt;

&lt;p&gt;(&lt;a href=&#34;http://connpass.com/event/40326/&#34;&gt;http://connpass.com/event/40326/&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Q And A</title>
      <link>http://www.rancher.jp/qa/</link>
      <pubDate>Mon, 18 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/qa/</guid>
      <description>

&lt;h1 id=&#34;このページについて&#34;&gt;このページについて&lt;/h1&gt;

&lt;p&gt;Rancher JP では皆様に Rancher, Rancher&amp;gt;OS をご使用していただいて疑問や困った事などを SlackのChannel &lt;code&gt;#qa&lt;/code&gt; にて議論・検討をしています。&lt;br /&gt;
その中で、一定の情報になった物を掲載していきます。&lt;/p&gt;

&lt;p&gt;質問・疑問などがある方は  &lt;a href=&#34;https://rancherjp.herokuapp.com/&#34;&gt;Join rancherjp on Slack!&lt;/a&gt; より 参加してみてください。&lt;/p&gt;

&lt;h1 id=&#34;rancheros&#34;&gt;RancherOS&lt;/h1&gt;

&lt;h2 id=&#34;ssh鍵を設定したい&#34;&gt;SSH鍵を設定したい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ナレッジ: FoxBoxsnet(@FoxBoxsnet)&lt;br /&gt;
RancherOS では、SSH公開鍵暗号方式でのログインが使用できます。&lt;br /&gt;
&lt;code&gt;cloud-config&lt;/code&gt; に記述します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  #cloud-config
  ssh_authorized_keys:
    - ssh-rsa AAA...ZZZ example1@rancher
    - ssh-rsa BBB...ZZZ example2@rancher
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/configuration/ssh-keys/&#34;&gt;SSH Keys in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ネットワーク設定&#34;&gt;ネットワーク設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ナレッジ: FoxBoxsnet(@FoxBoxsnet)&lt;/p&gt;

&lt;p&gt;RancherOS ではデフォルトでDHCPによりIPアドレスを決定しますが、固定したい場合もあるかと思います。&lt;br /&gt;
ここでは下記のように設定してみました。&lt;br /&gt;
適宜書き換えてください。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;interface&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;eth0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DNS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;172.18.1.254&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IP Address&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;172.18.1.1 /24&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gate Way&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;172.18.1.254&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#cloud-config
rancher:
  network:
    dns:
      nameservers:
      - 172.18.1.254
    interfaces:
      eth0:
        address: 172.18.1.1/24
        gateway: 172.18.1.254
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/networking/interfaces/&#34;&gt;Configuring Network Interfaces in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/networking/dns/&#34;&gt;Configuring DNS in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancheros-を-proxy-配下で利用する&#34;&gt;RancherOS を Proxy 配下で利用する&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ナレッジ: FoxBoxsnet(@FoxBoxsnet)&lt;/p&gt;

&lt;p&gt;RancherOSで Proxy 配下で DockerImage をダウンロードできるように設定します。&lt;br /&gt;
&lt;strong&gt;この設定は ホストを再起動するまで適用されません&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#cloud-config
rancher:
  network:
    http_proxy: https://myproxy.example.com
    https_proxy: https://myproxy.example.com
    no_proxy: localhost,127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt; にポート番号が必要な場合は &lt;code&gt;&amp;lt;ホスト名&amp;gt;:&amp;lt;ポート番号&amp;gt;&lt;/code&gt; で可能かと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#cloud-config
rancher:
  network:
    http_proxy: https://myproxy.example.com:8080
    https_proxy: https://myproxy.example.com:8080
    no_proxy: localhost,127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/networking/proxy-settings/&#34;&gt;Configuring Proxy Settings in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rancheros-のホスト名-hostname-設定&#34;&gt;RancherOS のホスト名(HostName) 設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ナレッジ: FoxBoxsnet(@FoxBoxsnet)&lt;/p&gt;

&lt;p&gt;RancherOS はデフォルトでは &lt;code&gt;rancher&lt;/code&gt; に設定されています。&lt;br /&gt;
運用上、不便のためホスト名を設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#cloud-config
hostname: rancher-host01.local
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/configuration/hostname/&#34;&gt;Setting the Hostname in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ntpサーバーを設定したい&#34;&gt;NTPサーバーを設定したい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ナレッジ: FoxBoxsnet(@FoxBoxsnet)&lt;/p&gt;

&lt;p&gt;RancherOS でNTPサーバーを任意設定します。
今回は、日本国内の stratum1サーバー NICT(情報通信研究機構) のサーバーからNTPを受信するように設定しました。&lt;br /&gt;
Linux標準の &lt;code&gt;/etc/ntpd.conf&lt;/code&gt; とほぼ同じ記述で問題無いと思われます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  #cloud-config
  write_files:
    - path: /etc/ntp.conf
      permissions: 0644
      content: |
          tinker panic 0
          default kod nomodify notrap nopeer noquery
          restrict -6 default kod nomodify notrap nopeer noquery

          restrict 127.0.0.1
          restrict -6 ::1

          restrict 133.243.238.163 mask 255.255.255.255 nomodify notrap noquery
          restrict 133.243.238.164 mask 255.255.255.255 nomodify notrap noquery
          restrict 133.243.238.243 mask 255.255.255.255 nomodify notrap noquery
          restrict 133.243.238.244 mask 255.255.255.255 nomodify notrap noquery

          server ntp.nict.jp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/configuration/write-files/&#34;&gt;Writing Files in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/system-services/built-in-system-services/&#34;&gt;Built-in System Services in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rancheros-で-timezone-を-jst-に変更したい&#34;&gt;RancherOS で TimeZone を JST に変更したい&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;質問: FoxBoxsnet(@FoxBoxsnet)&lt;/p&gt;

&lt;p&gt;RancherOS デフォルトの設定は、 TimeZoneは &lt;code&gt;UTC&lt;/code&gt; に設定されます。&lt;br /&gt;
コンソールのTimeZoneをJST(Japan Standard Time)に設定したい&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#cloud-config
rancher:
  services:
    console:
      environment:
        TZ: &#39;JST-9&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/system-services/adding-system-services/&#34;&gt;Adding System Services in RancherOS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rancher.com/os/system-services/built-in-system-services/&#34;&gt;Built-in System Services in RancherOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.rancher.jp/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rancher.jp/about/</guid>
      <description>

&lt;h2 id=&#34;このページについて&#34;&gt;このページについて&lt;/h2&gt;

&lt;p&gt;本ページは Rancher JP による &lt;strong&gt;Rancher&lt;/strong&gt; 及び関連するコンテナ技術に関する情報発信ページです。&lt;br /&gt;
日本語による &lt;strong&gt;Rancher&lt;/strong&gt; のリリース情報、新機能解説、ユーザーによるBlog情報、勉強会レポートといった
各種情報を本ページに集約することで日本のユーザーが簡単に情報収集できることを目的としています。&lt;/p&gt;

&lt;h2 id=&#34;rancher-とは&#34;&gt;Rancher とは?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Rancher&lt;/strong&gt; とは米国 &lt;a href=&#34;http://rancher.com&#34;&gt;Rancher Labs 社&lt;/a&gt;が主体として開発しているオープンソースのコンテナ管理プラットフォームです。&lt;br /&gt;
商用環境を想定し複数ホストから構成されるクラスタの管理、稼働するコンテナのライフサイクル管理、
様々なアプリケーションのテンプレート管理といった機能を有しています。&lt;br /&gt;
また、既存のコンテナオーケストレーションツールである &lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;,
 &lt;a href=&#34;http://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;http://mesos.apache.org/&#34;&gt;Mesos&lt;/a&gt; などをサポートしており
&lt;strong&gt;Rancher&lt;/strong&gt; を利用することでコンテナサービスにおけるインフラストラクチャ〜アプリケーションといった
幅広いスタックを容易に管理することが可能になります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.rancher.com&#34;&gt;Rancher ドキュメントページ&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rancher-jp-とは&#34;&gt;Rancher JP とは?&lt;/h2&gt;

&lt;p&gt;オープンソースのコンテナ管理プラットフォームである &lt;strong&gt;Rancher&lt;/strong&gt; の日本国内での普及を目的としたコミュニティです。&lt;br /&gt;
本ページや勉強会、SNS などを通じて &lt;strong&gt;Rancher&lt;/strong&gt; や関連するコンテナ技術に関する情報を日本語により発信し、各種コンテナ技術の普及と人材育成に貢献します。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>